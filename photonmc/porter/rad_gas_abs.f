module rad_gas_abs
implicit none
! ---- Data members ----
integer, parameter :: strLen = 128
character(len=strLen) :: modelName_
integer :: modelId_
! ---- Parameters ------
! database
! Planck mean absorption coefficient of CO2
integer, parameter :: kpLen=126
integer, parameter :: dp = kind(1.d0)
real(dp), dimension(kpLen) :: kpT, kpCO2, kpH2O

! smith 1982   ( http://doi.org/10.1115/1.3245174 )
! P_H20/p_CO2 = 1 
real(dp), dimension(3) :: ki1
real(dp), dimension(3,4) :: bei1
! P_H20/p_CO2 = 2
real(dp), dimension(3) :: ki2
real(dp), dimension(3,4) :: bei2

! shan 2018 (https://doi.org/10.1016/j.ijheatmasstransfer.2018.01.079)

real(dp), dimension(4,5,3) :: sc1ijk,sc2ijk,sc3ijk,sc4ijk,sc5ijk,sc6ijk
real(dp), dimension(4,5,3) :: sc7ijk,sc8ijk,sc9ijk,sc10ijk,sc11ijk,sc12ijk
real(dp), dimension(4,5,3) :: sc13ijk,sc14ijk,sc15ijk,sc16ijk,sc17ijk,sc18ijk
real(dp), dimension(4,5,3) :: sc19ijk,sc20ijk,sc21ijk,sc22ijk,sc23ijk,sc24ijk
real(dp), dimension(4,5,3) :: sc25ijk,sc26ijk,sc27ijk,sc28ijk,sc29ijk,sc30ijk
real(dp), dimension(4,5,3) :: sc31ijk,sc32ijk,sc33ijk,sc34ijk,sc35ijk,sc36ijk
real(dp), dimension(4,5,3) :: sc37ijk,sc38ijk,sc39ijk,sc40ijk,sc41ijk,sc42ijk

real(dp), dimension(4,3)::sd1ik,sd2ik,sd3ik,sd4ik,sd5ik,sd6ik,sd7ik,sd8ik
real(dp), dimension(4,3)::sd9ik,sd10ik,sd11ik,sd12ik,sd13ik,sd14ik,sd15ik,sd16ik
real(dp), dimension(4,3)::sd17ik,sd18ik,sd19ik,sd20ik,sd21ik,sd22ik,sd23ik,sd24ik
real(dp), dimension(4,3)::sd25ik,sd26ik,sd27ik,sd28ik,sd29ik,sd30ik,sd31ik,sd32ik
real(dp), dimension(4,3)::sd33ik,sd34ik,sd35ik,sd36ik,sd37ik,sd38ik,sd39ik,sd40ik
real(dp), dimension(4,3)::sd41ik,sd42ik
! krishnamoorthy  2013 (https://doi.org/10.1016/j.ijheatmasstransfer.2012.07.032) 
real(dp), dimension(4)::   kr1i, kr2i, kr3i,kr4i 
real(dp), dimension(4,2):: krd1ik, krd2ik, krd3ik,krd4ik 

!kangwanpongpan 2012 (https://doi.org/10.1016/j.ijheatmasstransfer.2012.07.032 )
real(dp), dimension(4) :: k1i, k2i, k3i, k4i, k5i,k6i, k7i
real(dp), dimension(4,6):: kd1ik, kd2ik, kd3ik, kd4ik, kd5ik, kd6ik, kd7ik 
!Yin 2013 
real(dp), dimension(4) :: y1i,y2i,y3i
real(dp), dimension(4,4) :: yd1ik, yd2ik,yd3ik  

! guo 2015 (https://doi.org/10.1016/j.ijheatmasstransfer.2015.06.052)
real(dp), dimension(4,4)   :: gdik 
real(dp), dimension(4,4,3) :: gcijk 

! BORDBER2014    ( https://doi.org/10.1016/j.combustflame.2014.03.013) 
real(dp), dimension(4,5,5) :: cijk
real(dp), dimension(4,5) :: dik
! JOHANSSON2011  ( https://doi.org/10.1016/j.combustflame.2011.02.001 )
real(dp), dimension(4,3) :: c1ik,c2ik,c3ik
real(dp), dimension(4)   :: k1j, k2j
! Dorigon2013    (https://doi.org/10.1016/j.ijheatmasstransfer.2013.05.010)
real(dp), dimension(4) :: kpi1, kpi2
real(dp), dimension(4) :: b1i0, b1i1, b1i2,b1i3,b1i4 
real(dp), dimension(4) :: b2i0, b2i1, b2i2,b2i3,b2i4 
! TAYLOR74       ( https://doi.org/10.1016/0017-9310(74)90067-2 )
real(dp), dimension(4)  :: kf2i, bf21i, bf22i 
real(dp), dimension(4)  :: kf1i, bf11i, bf12i

data kpT   / 300, 320, 340, 360, 380, 400,&
             420, 440, 460, 480, 500, 520,&
             540, 560, 580, 600, 620, 640,&
             660, 680, 700, 720, 740, 760,&
             780, 800, 820, 840, 860, 880,&
             900, 920, 940, 960, 980,1000,&
            1020,1040,1060,1080,1100,1120,&
            1140,1160,1180,1200,1220,1240,&
            1260,1280,1300,1320,1340,1360,&
            1380,1400,1420,1440,1460,1480,&
            1500,1520,1540,1560,1580,1600,&
            1620,1640,1660,1680,1700,1720,&
            1740,1760,1780,1800,1820,1840,&
            1860,1880,1900,1920,1940,1960,&
            1980,2000,2020,2040,2060,2080,&
            2100,2120,2140,2160,2180,2200,&
            2220,2240,2260,2280,2300,2320,&
            2340,2360,2380,2400,2420,2440,&
            2460,2480,2500,2520,2540,2560,&
            2580,2600,2620,2640,2660,2680,&
            2700,2720,2740,2760,2780,2800/

data kpCO2 /0.259375,0.250671,0.246764,0.247224,0.251313,0.258158,&
            0.266878,0.276654,0.286778,0.296672,0.305889,0.314100,&
            0.321089,0.326724,0.330951,0.333771,0.335228,0.335395,&
            0.334368,0.332253,0.329164,0.325215,0.320517,0.315180,&
            0.309303,0.302980,0.296298,0.289334,0.282157,0.274829,&
            0.267406,0.259934,0.252456,0.245008,0.237619,0.230316,&
            0.223120,0.216049,0.209119,0.202339,0.195721,0.189270,&
            0.182992,0.176890,0.170966,0.165221,0.159654,0.154264,&
            0.149050,0.144008,0.139135,0.134429,0.129886,0.125500,&
            0.121269,0.117188,0.113252,0.109457,0.105799,0.102272,&
            0.0988730,0.0956280,0.0924685,0.0894237,0.0864895,0.0836616,&
            0.0809361,0.0783092,0.0757772,0.0733364,0.0709833,0.0687146,&
            0.0665270,0.0644172,0.0623824,0.0604196,0.0585259,0.0566987,&
            0.0549354,0.0532336,0.0515907,0.0500045,0.0484729,0.0469937,&
            0.0455648,0.0441845,0.0428507,0.0415618,0.0403159,0.0391116,&
            0.0379472,0.0368212,0.0357322,0.0346787,0.0336596,0.0326735,&
            0.0317192,0.0307956,0.0299015,0.0290359,0.0281978,0.0273861,&
            0.0265999,0.0258384,0.0251006,0.0243858,0.0236931,0.0230217,&
            0.0223710,0.0217402,0.0211287,0.0205357,0.0199608,0.0194031,&
            0.0188623,0.0183377,0.0178288,0.0173350,0.0168560,0.0163911,&
            0.0159400,0.0155022,0.0150772,0.0146647,0.0142642,0.0138754/

data kpH2O /0.370897,0.335415,0.305788,0.280695,0.259118,0.240292,&
            0.223648,0.208767,0.195337,0.183127,0.171965,0.161717,&
            0.152277,0.143561,0.135499,0.128031,0.121106,0.114678,&
            0.108706,0.103152,0.0979827,0.0931668,0.0886759,0.0844838,&
            0.0805666,0.0769022,0.0734704,0.0702529,0.0672326,0.0643942,&
            0.0617236,0.0592079,0.0568353,0.0545951,0.0524776,0.0504738,&
            0.0485755,0.0467754,0.0450666,0.0434429,0.0418987,0.0404303,&
            0.0390298,0.0376943,0.0364198,0.0352026,0.0340393,0.0329268,&
            0.0318620,0.0308424,0.0298654,0.0289287,0.0280302,0.0271677,&
            0.0263396,0.0255439,0.0247792,0.0240437,0.0233363,0.0226554,&
            0.0219998,0.0213753,0.0207665,0.0201797,0.0196139,0.0190682,&
            0.0185418,0.0180337,0.0175432,0.0170695,0.0166120,0.0161699,&
            0.0157426,0.0153295,0.0149301,0.0145438,0.0141700,0.0138083,&
            0.0134582,0.0131192,0.0127910,0.0124731,0.0121651,0.0118666,&
            0.0115773,0.0112969,0.0110249,0.0107612,0.0105054,0.0102573,&
            0.0100164,0.00978269,0.00955579,0.00933549,0.00912156,0.00891377,&
            0.00871191,0.00851578,0.00832519,0.00813994,0.00795986,0.00778477,&
            0.00761451,0.00744891,0.00728783,0.00713111,0.00697861,0.00683020,&
            0.00668574,0.00654510,0.00640817,0.00627483,0.00614495,0.00601845,&
            0.00589519,0.00577510,0.00565807,0.00554400,0.00543280,0.00532439,&
            0.00521868,0.00511559,0.00501505,0.00491696,0.00482127,0.00472790/

! smith1982 
data ki1  / 0.4303, 7.055, 178.1 /
data bei1 /5.150,  0.7749, 1.907, &
          -2.303,  3.399, -1.824, &
           0.9779,-2.297,  0.5608, &
          -1.494,  3.770, -0.5122 /
data ki2 / 0.4201, 6.516, 131.9 /
data bei2 / 6.508, -0.2504, 2.718, &
            -5.551, 6.112, -3.118, &
             3.029,-3.882, 1.221, &
            -5.353, 6.528,-1.612 /

!  TAYLOR74  
data kf1i  / 0.0, 0.91, 9.4, 130.0/
data kf2i  / 0.0, 0.69, 7.4, 80.0 /
data bf21i / 0.364, 0.266, 0.252, 0.118 /
data bf22i / 4.74, 7.19, -7.41, -4.52 /

data bf11i/ 0.4092, 0.284, 0.211,  0.0958/ 
data bf12i / 7.53,    2.58, -6.54, - 3.57/

! JOHANSSON2011
 data c1ik /0.3580 ,    0.3920 ,    0.1420 ,    0.0798 , &
            0.0731 ,   -0.2120 ,   -0.0831 ,   -0.0370 , &
           -0.0466 ,    0.0191 ,    0.0148 ,    0.0023 /
 data c2ik /-0.1650 ,   -0.2910 ,    0.3480 ,    0.0866 , &
            -0.0554 ,    0.6440 ,   -0.2940 ,   -0.1060 , &
             0.0930 ,   -0.2090 ,    0.0662 ,    0.0305 /
 data c3ik / 0.0598 ,    0.0784 ,   -0.1220 ,   -0.0127 , &
             0.0028 ,   -0.1970 ,    0.1180 ,    0.0169 , &
            -0.0256 ,    0.0662 ,   -0.0295 ,   -0.0051 /

data k1j / 0.055, 0.88, 10.0, 135.0 /
data k2j / 0.012,-0.021,-1.6, -35.0 /

! Dorigon2013
data kpi2 / 0.1921, 1.719, 11.37, 111.016/
data kpi1 / 0.01873, 1.723, 12.48,  144.9/

data b1i0 / 0.07197 , 0.11070, 0.20910, 0.07092/
data b1i1 / 87.24, 33.97, -6.423, 6.586/
data b1i2 / -96.90, -24.67, -3.200, -12.78/ 
data b1i3 / 46.51, 4.647, 1.718, 5.577/ 
data b1i4 / -79.17, -1.039, -2.105, -7.709/ 

data b2i0 / 0.05617, 0.14260, 0.13620, 0.12220/
data b2i1 / 78.44  , 17.95  , 25.74  , -2.327/
data b2i2 / -85.63 , -1.077 , -37.11 , -7.492/
data b2i3 / 42.46  , -6.971 , 15.75  , 4.275 /
data b2i4 / -74.4  , 17.74  , -22.67 , -6.608/
! Guo 2015 

data gdik /   0.00527774 ,   0.01273960 ,   0.01060850 ,  -0.02862580 , &
   0.05877410 ,  -0.21079500 ,  -0.04988030 ,   0.20190100 , &
  -0.00221317 ,   0.64069800 ,  -0.07515800 ,  -0.56332700 , &
   0.03367980 ,  -0.20729800 ,   0.51450900 ,   0.65910900 /

data gcijk / -1.98431D-4 ,   2.591220D-3 , 2.737940D-2 ,   0.373884 , &
             -4.77095D-5 ,  -1.108450D-2 , -7.152960D-2 , -3.165460 , &
             -8.755750D-4 , -1.096580D-3 , -8.282570D-2 ,  8.234830 , &
              4.009250D-4 , -1.851700D-3 , -3.165800D-2 , -7.502580 , &
              2.100060D-4 , -1.289880D-2 ,  -6.77349D-2 ,  -1.815100 , &
              3.342200D-3 ,  5.548570D-2 ,   9.74045D-2 ,  12.914100 , &
             -9.038210D-4 , -9.261260D-3 ,   0.5450 ,     -30.734500 , &
              2.832040D-4 ,   7.78285D-3 ,   7.57066D-2 ,  26.882800 , &
             -8.77357D-5 ,  -2.071990D-3 ,  -1.10101D-2 ,   0.729046 , &
              5.80970D-4 ,  1.1207600D-2 ,   2.86980D-2 ,  -4.536010 , &
             -3.67320D-4 , -1.534830D-2 ,   1.52726D-2 ,   8.071190 , &
              3.33187D-4 ,  1.375980D-2 ,   6.34926D-2 ,   3.179320 /
! kangwanpongpan  2012 
data k1i /0.049191 ,   0.343891 ,   3.710740 , 106.080000 /
 data kd1ik /0.432900 ,  -0.515100 ,   0.346100 ,   0.144300 , &
  -0.725500 ,   7.207100 ,  -1.183800 ,  -0.421600 , &
   1.138400 , -21.319000 ,   3.094400 ,   1.507100 , &
   0.266100 ,  28.355000 ,  -4.115700 ,  -2.737800 , &
  -1.178600 , -17.950000 ,   2.533900 ,   2.138600 , &
   0.471300 ,   4.377800 ,  -0.585700 ,  -0.599400 /

 data k2i / 0.045079 ,   0.386642 ,   3.764160 ,  96.034300 /
 data kd2ik /0.360700 ,  -0.471300 ,   0.299900 ,   0.175500 , &
  -0.184900 ,   6.375000 ,  -0.435400 ,  -0.471000 , &
  -1.064400 , -18.102000 ,   0.860300 ,   1.410300 , &
   4.061000 ,  23.534000 ,  -1.153100 ,  -2.470500 , &
  -3.987800 , -14.680000 ,   0.644200 ,   1.932300 , &
   1.227200 ,   3.538900 ,  -0.116700 ,  -0.545900 /

 data k3i /0.049191 ,   0.421502 ,   3.852390 ,  83.534000 /
 data kd3ik /0.302600 ,  -0.423500 ,   0.261400 ,   0.195400 , &
   0.370500 ,   5.404900 ,   0.139100 ,  -0.337400 , &
  -3.395700 , -14.682000 ,  -0.584300 ,   0.682900 , &
   7.997900 ,  18.707000 ,   0.541200 ,  -1.304400 , &
  -6.884700 , -11.509000 ,  -0.374000 ,   1.142100 , &
   2.009800 ,   2.737700 ,   0.132500 ,  -0.349000 /

 data k4i/0.050784 ,   0.431878 ,   3.908780 ,  75.525500 /
 data kd4ik /0.288700 ,  -0.406600 ,   0.252900 ,   0.197400 , &
   0.533500 ,   4.995100 ,   0.246600 ,  -0.145600 , &
  -4.229600 , -13.339000 ,  -0.601900 ,  -0.106200 , &
   9.499300 ,  16.952000 ,   0.314300 ,  -0.118100 , &
  -8.035400 , -10.410000 ,  -0.158300 ,   0.355400 , &
   2.330700 ,   2.465900 ,   0.074600 ,  -0.154200 /

 data k5i /0.051446 ,   0.436145 ,   3.948270 ,  69.781000 /
 data kd5ik /0.285300 ,  -0.397600 ,   0.253200 ,   0.194100 , &
   0.585300 ,   4.779900 ,   0.215100 ,   0.033700 , &
  -4.589400 , -12.689000 ,  -0.251500 ,  -0.794500 , &
  10.205000 ,  16.172000 ,  -0.358900 ,   0.895400 , &
  -8.605700 ,  -9.950600 ,   0.329300 ,  -0.311400 , &
   2.496000 ,   2.355700 ,  -0.049800 ,   0.010400 /

 data k6i /0.051832 ,   0.440593 ,   3.981020 ,  56.081800 /
 data kd6ik /0.287200 ,  -0.374800 ,   0.265500 ,   0.175000 , &
   0.580700 ,   4.396000 ,  -0.090800 ,   0.548100 , &
  -4.909200 , -11.671000 ,   1.303500 ,  -2.657600 , &
  11.012000 ,  15.104000 ,  -2.922700 ,   3.581600 , &
  -9.346500 ,  -9.382000 ,   2.097800 ,  -2.062700 , &
   2.729400 ,   2.226300 ,  -0.495000 ,   0.441200 /
 
 data k7i /0.051687 ,   0.444449 ,   3.933740 ,  44.750100 /
 data kd7ik / 0.291100 ,  -0.341600 ,   0.279000 ,   0.147100 , &
   0.505000 ,   4.048700 ,  -0.482800 ,   1.069000 , &
  -4.803900 , -10.799000 ,   3.010300 ,  -4.449000 , &
  11.037000 ,  14.158000 ,  -5.573000 ,   6.108200 , &
  -9.488600 ,  -8.855900 ,   3.880100 ,  -3.692300 , &
   2.796900 ,   2.103100 ,  -0.939100 ,   0.840000 /

! Krishnamoorthy 2012
data kr1i /0.06592, 0.99698   , 10.00038, 100.00000 / 
data krd1ik /7.85445e-05,-9.47416e-05,-5.51091e-05, 7.26634e-06, & 
            2.39641e-01,  3.42342e-01, 1.37773e-01, 4.40724e-02/ 
data kr2i /0.10411, 1.00018, 9.99994, 100.00000 / 
data krd2ik /9.33340e-05,-5.32833e-05, -1.01806e-04, -2.25973e-05, & 
             1.89029e-01, 2.87021e-01,  2.54516e-01,  6.54289e-02/ 
data kr3i/ 0.20616, 1.39587, 8.56904, 99.75698/ 
data krd3ik/ 9.22363e-05, -4.25444e-05, -9.89282e-05, -3.83770e-05, & 
             1.91464e-01,  2.34876e-01,  2.47320e-01,  9.59426e-02 /
data kr4i/  0.21051, 1.33782, 8.55495, 99.75649/ 
data krd4ik /1.07579e-04, -3.09769e-05, -1.13634e-04, -3.43141e-05, & 
             1.54129e-01,  2.43637e-01,  2.84084e-01,  8.57853e-02/ 


! Yang2013 
 data y1i /0.352505 ,   8.210621 , 137.410012 ,1269.710976 /
 data yd1ik / 0.315106 ,   0.092474 ,   0.031702 ,   0.046138 , &
   0.023475 ,   0.109146 ,   0.037396 ,  -0.061392 , &
  -0.057930 ,  -0.121000 ,  -0.040731 ,   0.027164 , &
   0.008408 ,   0.027145 ,   0.008742 ,  -0.003996 /

 data y2i /0.261021 ,   3.147817 ,  54.265868 , 482.900353 /
 data yd2ik /0.500119 ,   0.071592 ,   0.155320 ,   0.072615 , &
  -0.447068 ,   0.508252 ,  -0.104294 ,  -0.100601 , &
   0.286878 ,  -0.384253 ,   0.014096 ,   0.046681 , &
  -0.059165 ,   0.073477 ,   0.001643 ,  -0.007224 /

 data y3i / 0.179160 ,   2.388971 ,  28.415805 , 253.059089 /
 data yd3ik /0.542458 ,   0.101734 ,   0.146066 ,   0.129511 , &
  -0.658411 ,   0.518429 ,  -0.008745 ,  -0.187993 , &
   0.466444 ,  -0.386151 ,  -0.058325 ,   0.090709 , &
  -0.100186 ,   0.073453 ,   0.015984 ,  -0.014493 /

! Borddar et al. (2014), A line by line based weighted sum of gray gases model for inhomogeneous
! co2-h2o mixture in oxy-fired combustion
 data dik /0.0340429 ,   0.3509457 ,   4.5707400 , 109.8169000 , &
   0.0652305 ,   0.7465138 ,   2.1680670 , -50.9235900 , &
  -0.0463685 ,  -0.5293090 ,  -1.4989010 ,  23.4323600 , &
   0.0138684 ,   0.1594423 ,   0.4917165 ,  -5.1638920 , &
  -0.0014450 ,  -0.0166326 ,  -0.0542999 ,   0.4393889 /

 data cijk /0.7412956 ,   0.1552073 ,   0.2550242 ,  -0.0345199 , &
  -0.9412652 ,   0.6755648 ,  -0.6065428 ,   0.4112046 , &
   0.8531866 ,  -1.1253940 ,   0.8123855 ,  -0.5055995 , &
  -0.3342806 ,   0.6040543 ,  -0.4532290 ,   0.2317509 , &
   0.0431436 ,  -0.1105453 ,   0.0869309 ,  -0.0375491 , &
  -0.5244441 ,  -0.4862117 ,   0.3805403 ,   0.2656726 , &
   0.2799577 ,   1.4092710 ,   0.3494024 ,  -0.5728350 , &
   0.0823075 ,  -0.5913199 ,  -1.1020090 ,   0.4579559 , &
   0.1474987 ,  -0.0553385 ,   0.6784475 ,  -0.1656759 , &
  -0.0688622 ,   0.0464663 ,  -0.1306996 ,   0.0229520 , &
   0.5822860 ,   0.3668088 ,  -0.4249709 ,  -0.1225365 , &
  -0.7672319 ,  -1.3834490 ,   0.1853509 ,   0.2924490 , &
   0.5289430 ,   0.9085441 ,   0.4046178 ,  -0.2616436 , &
  -0.4160689 ,  -0.1733014 ,  -0.3432603 ,   0.1052608 , &
   0.1109773 ,  -0.0016129 ,   0.0741446 ,  -0.0160047 , &
  -0.2096994 ,  -0.1055508 ,   0.1429446 ,   0.0300151 , &
   0.3204027 ,   0.4575210 ,  -0.1013694 ,  -0.0798076 , &
  -0.2468463 ,  -0.3334201 ,  -0.0811822 ,   0.0764841 , &
   0.1697627 ,   0.0791608 ,   0.0883088 ,  -0.0321935 , &
  -0.0420861 ,  -0.0035398 ,  -0.0202929 ,   0.0050463 , &
   0.0242031 ,   0.0105857 ,  -0.0157408 ,  -0.0028205 , &
  -0.0391017 ,  -0.0501976 ,   0.0130244 ,   0.0079966 , &
   0.0310940 ,   0.0384236 ,   0.0062981 ,  -0.0079084 , &
  -0.0204066 ,  -0.0098934 ,  -0.0084152 ,   0.0033870 , &
   0.0049188 ,   0.0006121 ,   0.0020110 ,  -0.0005364 /

! shan 2018 
data sd1ik /  -0.015378 ,  -0.190867 ,  -1.518125 , -25.110022 , &
   0.058045 ,   0.673880 ,   5.507075 ,  95.668486 , &
  -0.002917 ,  -0.135714 ,  -0.051576 ,  58.876289 /
data sc1ijk /  -0.236332 ,   0.170545 ,  -0.078097 ,   0.022830 , &
   1.610417 ,  -1.349621 ,   0.693716 ,  -0.175235 , &
  -3.838701 ,   2.969974 ,  -1.472281 ,   0.429533 , &
   3.598783 ,  -2.528109 ,   1.235268 ,  -0.418355 , &
  -1.165102 ,   0.751289 ,  -0.368991 ,   0.141855 , &
   0.715405 ,  -0.465564 ,   0.218316 ,   0.013976 , &
  -5.480776 ,   3.833825 ,  -1.503885 ,   0.243556 , &
  13.080739 ,  -8.173162 ,   2.937262 ,  -0.805993 , &
 -12.063345 ,   6.781314 ,  -2.345867 ,   0.864170 , &
   3.850902 ,  -1.978296 ,   0.678223 ,  -0.307034 , &
   0.096915 ,   0.331541 ,   0.160582 ,   0.021092 , &
   1.946002 ,  -0.549515 ,   0.196175 ,   0.175140 , &
  -5.125955 ,   0.670769 ,  -0.430572 ,  -0.271421 , &
   5.080531 ,  -0.421926 ,   0.168094 ,   0.062857 , &
  -1.735123 ,   0.090653 ,   0.000438 ,   0.030545 /

data sd2ik /  -0.006493 ,  -0.043453 ,  -0.180656 ,  -2.018915 , &
   0.047022 ,   0.316073 ,   1.264335 ,   9.625707 , &
  -0.016409 ,  -0.009752 ,   3.084032 , 138.597419 /
data sc2ijk /  -0.023357 ,   0.040755 ,  -0.007809 ,  -0.006776 , &
   0.125094 ,  -0.230434 ,   0.021290 ,   0.037808 , &
  -0.239832 ,   0.454888 ,  -0.005266 ,  -0.080276 , &
   0.206051 ,  -0.382807 ,  -0.006526 ,   0.069749 , &
  -0.070016 ,   0.120040 ,   0.001006 ,  -0.021072 , &
   0.060907 ,  -0.147913 ,  -0.033702 ,   0.121468 , &
  -0.432411 ,   0.569007 ,   0.624968 ,  -0.523862 , &
   0.725548 ,  -0.837193 ,  -1.591284 ,   0.992471 , &
  -0.560529 ,   0.658109 ,   1.389841 ,  -0.818124 , &
   0.205782 ,  -0.233858 ,  -0.400018 ,   0.240939 , &
   0.554011 ,   0.215399 ,   0.383467 ,  -0.075466 , &
  -2.209438 ,   1.503377 ,  -1.371827 ,   0.857802 , &
   5.188950 ,  -3.940826 ,   2.758457 ,  -1.829108 , &
  -4.354172 ,   3.243279 ,  -2.336148 ,   1.475027 , &
   1.174775 ,  -0.873230 ,   0.676932 ,  -0.413693 /

data sd3ik /  -0.000481 ,  -0.001188 ,   0.006233 ,   0.207298 , &
   0.004357 ,   0.017275 ,  -0.061247 ,  -5.588567 , &
   0.058049 ,   0.509194 ,   5.396133 , 163.835109 /
data sc3ijk /   0.006011 ,  -0.014353 ,   0.013709 ,  -0.008029 , &
  -0.015566 ,   0.097413 ,  -0.114794 ,   0.044917 , &
   0.032288 ,  -0.215482 ,   0.253555 ,  -0.094138 , &
  -0.033069 ,   0.185444 ,  -0.217960 ,   0.081849 , &
   0.011259 ,  -0.055224 ,   0.065397 ,  -0.025128 , &
  -0.123189 ,   0.236059 ,  -0.202873 ,   0.131669 , &
   0.433637 ,  -1.699985 ,   1.657856 ,  -0.590162 , &
  -0.908634 ,   3.747514 ,  -3.542008 ,   1.132372 , &
   0.851228 ,  -3.189273 ,   2.977821 ,  -0.944685 , &
  -0.275645 ,   0.944724 ,  -0.881654 ,   0.283260 , &
   0.820513 ,  -0.438765 ,   0.715858 ,  -0.096232 , &
  -3.423063 ,   5.333784 ,  -3.326029 ,   1.009263 , &
   7.371755 , -11.553740 ,   6.420222 ,  -2.166919 , &
  -6.175276 ,   9.540784 ,  -5.305115 ,   1.787682 , &
   1.800071 ,  -2.783341 ,   1.573214 ,  -0.518079 /
data sd4ik /0.000080 ,   0.000760 ,   0.003779 ,   0.168146 , &
  -0.002554 ,  -0.006021 ,  -0.027339 ,  -3.335852 , &
   0.079319 ,   0.578841 ,   5.281029 , 151.728295 /
data sc4ijk /   0.006579 ,  -0.007773 ,   0.004028 ,  -0.002731 , &
  -0.039284 ,   0.058105 ,  -0.033342 ,   0.010714 , &
   0.092173 ,  -0.132546 ,   0.069417 ,  -0.017788 , &
  -0.086985 ,   0.117078 ,  -0.056984 ,   0.013013 , &
   0.028402 ,  -0.036044 ,   0.016609 ,  -0.003487 , &
  -0.125406 ,   0.149858 ,  -0.081954 ,   0.067606 , &
   0.682367 ,  -1.166169 ,   0.649356 ,  -0.183489 , &
  -1.540540 ,   2.600137 ,  -1.270426 ,   0.232944 , &
   1.417454 ,  -2.223458 ,   0.995412 ,  -0.139482 , &
  -0.455626 ,   0.666482 ,  -0.281231 ,   0.031652 , &
   0.813364 ,  -0.158454 ,   0.338863 ,   0.097430 , &
  -4.061625 ,   3.545989 ,  -0.207304 ,  -0.199468 , &
   9.007341 ,  -7.655158 ,  -0.580290 ,   0.481043 , &
  -7.631682 ,   6.207067 ,   0.794180 ,  -0.565453 , &
   2.262825 ,  -1.804339 ,  -0.272936 ,   0.212504 /
data sd5ik /  -0.000125 ,  -0.001684 ,  -0.007249 ,   0.012512 , &
   0.004341 ,   0.068346 ,   0.288745 ,   0.335283 , &
   0.030904 ,   0.079552 ,   3.223016 , 130.580274 /
data sc5ijk / 0.000019 ,  -0.002038 ,   0.002437 ,  -0.000794 , &
   0.001003 ,   0.013386 ,  -0.014970 ,   0.003278 , &
  -0.003550 ,  -0.027369 ,   0.029911 ,  -0.005521 , &
   0.003529 ,   0.022518 ,  -0.024345 ,   0.004167 , &
  -0.001088 ,  -0.006635 ,   0.007121 ,  -0.001210 , &
  -0.006349 ,   0.058588 ,  -0.062783 ,   0.024998 , &
  -0.019798 ,  -0.412516 ,   0.350763 ,  -0.027856 , &
   0.116983 ,   0.819987 ,  -0.639036 ,  -0.015740 , &
  -0.134193 ,  -0.645050 ,   0.486647 ,   0.035937 , &
   0.044497 ,   0.183550 ,  -0.136939 ,  -0.012323 , &
   0.278753 ,   0.180726 ,   0.306255 ,   0.329773 , &
  -1.068605 ,   0.481369 ,   0.941371 ,  -1.012203 , &
   2.004425 ,  -0.371394 ,  -2.943635 ,   1.741123 , &
  -1.166582 ,  -0.121002 ,   2.617988 ,  -1.435056 , &
   0.210615 ,   0.084078 ,  -0.767063 ,   0.424484 /
data sd6ik /   0.000009 ,  -0.000226 ,  -0.000991 ,  -0.004987 , &
  -0.000168 ,   0.017449 ,   0.066467 ,   1.025015 , &
   0.067376 ,   0.514266 ,   5.165360 , 123.785434 /
data sc6ijk /  -0.000059 ,   0.000094 ,  -0.000039 ,  -0.000129 , &
   0.001064 ,  -0.000341 ,   0.000848 ,  -0.000462 , &
  -0.003125 ,   0.001511 ,  -0.003305 ,   0.002084 , &
   0.003276 ,  -0.002317 ,   0.004082 ,  -0.002483 , &
  -0.001121 ,   0.000997 ,  -0.001618 ,   0.000972 , &
   0.000427 ,  -0.016427 ,   0.024770 ,  -0.000782 , &
  -0.049671 ,   0.073467 ,  -0.209126 ,   0.116162 , &
   0.168832 ,  -0.205890 ,   0.538822 ,  -0.313680 , &
  -0.191563 ,   0.240614 ,  -0.527983 ,   0.303764 , &
   0.068766 ,  -0.090315 ,   0.178275 ,  -0.102594 , &
   0.174740 ,   0.828373 ,  -0.454417 ,   0.579567 , &
  -0.495776 ,  -3.747413 ,   5.811882 ,  -2.396773 , &
   0.797347 ,   8.594053 , -13.214355 ,   4.658203 , &
   0.082282 ,  -7.900418 ,  11.539863 ,  -4.131320 , &
  -0.261567 ,   2.508381 ,  -3.575897 ,   1.357229 /
data sd7ik /   0.000260 ,  -0.039464 ,  -0.674317 , -17.895880 , &
   0.021099 ,   0.260163 ,   3.165877 ,  70.810186 , &
   0.019706 ,   0.134943 ,   1.413981 ,  65.741511 /
data sc7ijk /  -0.313471 ,   0.241790 ,  -0.168009 ,   0.021284 , &
   2.497086 ,  -1.713947 ,   0.896330 ,  -0.180340 , &
  -6.080963 ,   3.724120 ,  -1.753975 ,   0.456646 , &
   5.789198 ,  -3.319610 ,   1.464744 ,  -0.453429 , &
  -1.897775 ,   1.048111 ,  -0.440464 ,   0.153686 , &
   0.982415 ,  -0.736340 ,   0.473998 ,   0.043755 , &
  -8.170297 ,   5.058397 ,  -2.157159 ,   0.234747 , &
  19.735540 , -10.739889 ,   4.112109 ,  -0.974085 , &
 -18.609047 ,   9.505175 ,  -3.450386 ,   1.111209 , &
   6.064332 ,  -3.000067 ,   1.046090 ,  -0.398952 , &
  -0.132957 ,   0.506499 ,   0.005833 ,   0.033918 , &
   3.899848 ,  -1.454377 ,   0.920954 ,   0.038677 , &
 -10.118298 ,   3.032320 ,  -2.017588 ,   0.080216 , &
  10.194178 ,  -3.015866 ,   1.646393 ,  -0.285193 , &
  -3.502487 ,   1.043305 ,  -0.476552 ,   0.144768 /
data sd8ik /   0.002763 ,   0.007245 ,  -0.042761 ,  -0.827982 , &
  -0.021399 ,  -0.036426 ,   0.404971 ,   2.260413 , &
   0.094692 ,   0.541281 ,   4.409570 , 134.569466 /
data sc8ijk /  -0.053577 ,   0.015578 ,   0.003983 ,  -0.012851 , &
   0.439115 ,  -0.135506 ,  -0.089843 ,   0.058506 , &
  -0.983711 ,   0.302325 ,   0.185201 ,  -0.102716 , &
   0.879544 ,  -0.305556 ,  -0.133870 ,   0.078681 , &
  -0.279319 ,   0.110650 ,   0.032276 ,  -0.021981 , &
   0.266382 ,   0.066328 ,  -0.146881 ,   0.164805 , &
  -2.619580 ,  -0.223507 ,   1.406222 ,  -0.597831 , &
   6.006013 ,   0.283486 ,  -2.744070 ,   0.957039 , &
  -5.405497 ,   0.193374 ,   2.060896 ,  -0.706960 , &
   1.722102 ,  -0.210870 ,  -0.545106 ,   0.194861 , &
   0.259533 ,  -0.193988 ,   0.559622 ,  -0.071642 , &
   1.030294 ,   2.795666 ,  -2.261118 ,   0.748449 , &
  -3.048251 ,  -5.327251 ,   3.938067 ,  -1.544585 , &
   3.425696 ,   3.551520 ,  -2.981714 ,   1.222704 , &
  -1.291852 ,  -0.785244 ,   0.814878 ,  -0.340187 /
data sd9ik /   0.000272 ,   0.000302 ,  -0.010150 ,   0.515563 , &
  -0.003982 ,   0.013515 ,   0.157551 ,  -7.379854 , &
   0.064875 ,   0.452615 ,   4.877480 , 151.633821 /
data sc9ijk /   0.010566 ,  -0.017120 ,   0.013187 ,  -0.007702 , &
  -0.050689 ,   0.113707 ,  -0.095073 ,   0.031819 , &
   0.114034 ,  -0.241883 ,   0.189675 ,  -0.054047 , &
  -0.108097 ,   0.203398 ,  -0.153787 ,   0.041321 , &
   0.036077 ,  -0.061062 ,   0.044993 ,  -0.011741 , &
  -0.175760 ,   0.267018 ,  -0.191332 ,   0.119628 , &
   0.824022 ,  -1.823427 ,   1.304897 ,  -0.362265 , &
  -1.737030 ,   3.801892 ,  -2.499613 ,   0.522541 , &
   1.570180 ,  -3.127513 ,   1.976911 ,  -0.368390 , &
  -0.510189 ,   0.921247 ,  -0.569957 ,   0.100393 , &
   1.001810 ,  -0.473577 ,   0.590165 ,   0.026688 , &
  -4.907256 ,   5.207936 ,  -1.772130 ,   0.233182 , &
  10.359993 , -10.693553 ,   2.888663 ,  -0.585297 , &
  -8.674761 ,   8.691805 ,  -2.327104 ,   0.466186 , &
   2.590983 ,  -2.566325 ,   0.710817 ,  -0.126158 /
data sd10ik /  -0.000322 ,   0.004159 ,   0.025579 ,   0.303060 , &
   0.009847 ,  -0.014895 ,  -0.261581 ,  -4.656636 , &
   0.003278 ,   0.484239 ,   6.106015 , 142.944595 /
data sc10ijk /   0.002805 ,  -0.000365 ,  -0.001169 ,  -0.001672 , &
  -0.006512 ,   0.006396 ,   0.007232 ,  -0.001238 , &
  -0.003994 ,   0.001576 ,  -0.026788 ,   0.009388 , &
   0.021259 ,  -0.017399 ,   0.031172 ,  -0.010546 , &
  -0.011656 ,   0.010156 ,  -0.011623 ,   0.003717 , &
  -0.061545 ,   0.040613 ,  -0.012519 ,   0.044269 , &
   0.144310 ,  -0.352937 ,   0.008693 ,   0.053671 , &
   0.083401 ,   0.422755 ,   0.267032 ,  -0.281726 , &
  -0.429180 ,  -0.034010 ,  -0.409478 ,   0.294450 , &
   0.229752 ,  -0.083752 ,   0.167250 ,  -0.098613 , &
   0.595931 ,   0.281690 ,   0.034111 ,   0.261742 , &
  -2.419362 ,   0.248193 ,   2.322104 ,  -1.072392 , &
   3.686421 ,   0.816781 ,  -5.918545 ,   1.956637 , &
  -1.335420 ,  -1.920511 ,   5.332715 ,  -1.643627 , &
  -0.130298 ,   0.899825 ,  -1.674243 ,   0.511399 /
data sd11ik /  -0.000025 ,  -0.001318 ,  -0.002405 ,   0.024559 , &
   0.001418 ,   0.052177 ,   0.080110 ,   0.336703 , &
   0.057885 ,   0.361131 ,   5.487466 , 120.861339 /
data sc11ijk /   0.000403 ,  -0.001333 ,   0.000749 ,   0.000089 , &
  -0.000737 ,   0.008852 ,  -0.002325 ,  -0.004668 , &
  -0.000723 ,  -0.016551 ,  -0.000646 ,   0.014286 , &
   0.001965 ,   0.011852 ,   0.005296 ,  -0.015544 , &
  -0.000907 ,  -0.002978 ,  -0.002867 ,   0.005584 , &
  -0.024453 ,   0.038400 ,  -0.003106 ,  -0.007237 , &
   0.077300 ,  -0.303240 ,  -0.053017 ,   0.231580 , &
  -0.061806 ,   0.571983 ,   0.267052 ,  -0.610346 , &
  -0.012273 ,  -0.405066 ,  -0.346745 ,   0.596239 , &
   0.018545 ,   0.100831 ,   0.134645 ,  -0.199205 , &
   0.465224 ,   0.400586 ,  -0.251826 ,   0.600717 , &
  -2.326662 ,  -0.494425 ,   3.894902 ,  -2.508415 , &
   4.811424 ,   1.137203 ,  -8.532993 ,   4.753011 , &
  -3.575065 ,  -1.135042 ,   7.292975 ,  -4.161710 , &
   0.906959 ,   0.367475 ,  -2.223807 ,   1.330599 /
data sd12ik /  -0.000051 ,  -0.001040 ,  -0.000715 ,  -0.009449 , &
   0.002783 ,   0.047577 ,   0.030414 ,   1.637037 , &
   0.041071 ,   0.341895 ,   5.805431 , 108.457883 /
data sc12ijk /  -0.000365 ,   0.000592 ,  -0.000720 ,   0.000257 , &
   0.002735 ,  -0.003587 ,   0.004664 ,  -0.002154 , &
  -0.006760 ,   0.008684 ,  -0.010136 ,   0.004160 , &
   0.006696 ,  -0.008803 ,   0.009360 ,  -0.003302 , &
  -0.002328 ,   0.003100 ,  -0.003164 ,   0.001030 , &
   0.006909 ,  -0.043090 ,   0.060653 ,  -0.016897 , &
  -0.070275 ,   0.231665 ,  -0.381403 ,   0.159991 , &
   0.206749 ,  -0.537360 ,   0.792065 ,  -0.292388 , &
  -0.232354 ,   0.529909 ,  -0.681426 ,   0.209636 , &
   0.087532 ,  -0.183015 ,   0.214719 ,  -0.057919 , &
   0.144904 ,   1.260250 ,  -0.939566 ,   0.726559 , &
  -0.764176 ,  -6.216697 ,   7.667091 ,  -2.082602 , &
   1.855113 ,  13.229779 , -15.237133 ,   2.444439 , &
  -1.066000 , -11.572494 ,  12.361075 ,  -1.326650 , &
   0.095486 ,   3.612974 ,  -3.706726 ,   0.326397 /
data sd13ik /  -0.012078 ,   0.035768 ,  -0.072215 , -11.120422 , &
   0.051218 ,  -0.026410 ,   1.000638 ,  46.351380 , &
   0.012659 ,   0.455118 ,   3.564693 ,  72.139075 /
data sc13ijk /  -0.018152 ,   0.031984 ,   0.016264 ,  -0.035016 , &
   0.145366 ,   0.118946 ,  -0.549202 ,   0.157948 , &
   0.003703 ,  -0.682800 ,   1.347067 ,  -0.252025 , &
  -0.176939 ,   0.788142 ,  -1.193967 ,   0.165956 , &
   0.072102 ,  -0.266118 ,   0.361295 ,  -0.038176 , &
   0.123134 ,  -0.011078 ,  -0.223430 ,   0.258271 , &
  -1.359462 ,  -0.969533 ,   2.949540 ,  -0.898994 , &
   1.900307 ,   3.381832 ,  -6.476488 ,   1.276440 , &
  -0.986660 ,  -3.436988 ,   5.464113 ,  -0.813482 , &
   0.212169 ,   1.102518 ,  -1.618863 ,   0.192669 , &
   0.485979 ,  -0.121262 ,   0.568382 ,  -0.094286 , &
  -0.863006 ,   3.146114 ,  -2.894958 ,   0.774714 , &
   2.168913 ,  -7.149705 ,   5.750086 ,  -1.477502 , &
  -1.867045 ,   6.067915 ,  -4.841806 ,   1.099037 , &
   0.495745 ,  -1.796530 ,   1.453942 ,  -0.290475 /
data sd14ik /   0.000144 ,   0.005885 ,  -0.073506 ,  -0.577691 , &
  -0.002695 ,  -0.009961 ,   0.685453 ,   2.528834 , &
   0.071597 ,   0.541751 ,   4.200230 , 117.613242 /
data sc14ijk /  -0.019020 ,  -0.021981 ,   0.035073 ,  -0.021051 , &
   0.231009 ,   0.062343 ,  -0.217453 ,   0.081313 , &
  -0.573237 ,  -0.013752 ,   0.362130 ,  -0.117687 , &
   0.549802 ,  -0.086527 ,  -0.244844 ,   0.076641 , &
  -0.182453 ,   0.051842 ,   0.060267 ,  -0.019023 , &
   0.056661 ,   0.302982 ,  -0.341890 ,   0.207651 , &
  -1.391560 ,  -1.343570 ,   2.007261 ,  -0.613202 , &
   3.747862 ,   1.738477 ,  -3.244254 ,   0.748586 , &
  -3.730649 ,  -0.560959 ,   2.146711 ,  -0.427675 , &
   1.261179 ,  -0.066981 ,  -0.517855 ,   0.094741 , &
   0.622397 ,  -0.533524 ,   0.730065 ,  -0.048908 , &
  -1.141383 ,   4.120599 ,  -2.337397 ,   0.509669 , &
   0.781562 ,  -6.539187 ,   3.225363 ,  -0.959147 , &
   0.713971 ,   3.814530 ,  -2.003496 ,   0.684686 , &
  -0.584055 ,  -0.729371 ,   0.456040 ,  -0.171233 /
data sd15ik /   0.000397 ,  -0.001866 ,  -0.028656 ,   0.380907 , &
  -0.004409 ,   0.045938 ,   0.328083 ,  -4.459286 , &
   0.074400 ,   0.442176 ,   4.912116 , 130.228154 /
data sc15ijk /   0.009829 ,  -0.016732 ,   0.011322 ,  -0.007098 , &
  -0.040132 ,   0.094111 ,  -0.056676 ,   0.017625 , &
   0.073634 ,  -0.171137 ,   0.080301 ,  -0.014633 , &
  -0.061848 ,   0.124015 ,  -0.044726 ,   0.003377 , &
   0.019592 ,  -0.032450 ,   0.008573 ,   0.000496 , &
  -0.174415 ,   0.283847 ,  -0.171520 ,   0.102289 , &
   0.719844 ,  -1.704408 ,   0.856068 ,  -0.137727 , &
  -1.223526 ,   3.167611 ,  -1.265334 ,  -0.009010 , &
   0.924485 ,  -2.354068 ,   0.782856 ,   0.100757 , &
  -0.265010 ,   0.631704 ,  -0.178995 ,  -0.043021 , &
   1.085110 ,  -0.540962 ,   0.428594 ,   0.149299 , &
  -5.248748 ,   5.055668 ,  -0.305055 ,  -0.373226 , &
  10.317178 ,  -9.737565 ,  -0.181050 ,   0.422371 , &
  -8.120156 ,   7.618304 ,   0.250030 ,  -0.256830 , &
   2.287979 ,  -2.175444 ,  -0.072307 ,   0.067507 /
data sd16ik /   0.000053 ,  -0.002429 ,  -0.004415 ,   0.174126 , &
  -0.000042 ,   0.052585 ,   0.032021 ,  -1.958664 , &
   0.060577 ,   0.422549 ,   5.815796 , 122.668541 /
data sc16ijk /   0.004499 ,  -0.013346 ,   0.011905 ,  -0.003786 , &
  -0.019384 ,   0.077696 ,  -0.061922 ,   0.010473 , &
   0.029938 ,  -0.150481 ,   0.114019 ,  -0.014380 , &
  -0.019749 ,   0.121341 ,  -0.091087 ,   0.010407 , &
   0.004920 ,  -0.035691 ,   0.026887 ,  -0.003042 , &
  -0.125215 ,   0.258731 ,  -0.189666 ,   0.063007 , &
   0.579998 ,  -1.610590 ,   0.986988 ,  -0.058328 , &
  -0.960230 ,   3.159642 ,  -1.821228 ,   0.007642 , &
   0.672908 ,  -2.555664 ,   1.481354 ,  -0.005587 , &
  -0.175658 ,   0.751371 ,  -0.446344 ,   0.007625 , &
   0.981804 ,  -0.512176 ,   0.516485 ,   0.265753 , &
  -5.156571 ,   5.083687 ,  -0.901716 ,  -0.592121 , &
  10.310454 , -10.433392 ,   1.940471 ,   0.313380 , &
  -8.126285 ,   8.924126 ,  -2.271947 ,   0.128160 , &
   2.280069 ,  -2.776749 ,   0.872488 ,  -0.108974 /
data sd17ik /  -0.000155 ,  -0.001068 ,   0.002436 ,   0.011848 , &
   0.005954 ,   0.032501 ,  -0.079310 ,   1.380480 , &
   0.021423 ,   0.487351 ,   6.243964 , 105.504873 /
data sc17ijk /    0.000073 ,  -0.000428 ,  -0.001833 ,   0.001793 , &
   0.001677 ,   0.003600 ,   0.013746 ,  -0.015685 , &
  -0.007696 ,  -0.002285 ,  -0.037456 ,   0.038446 , &
   0.009693 ,  -0.002751 ,   0.039783 ,  -0.037631 , &
  -0.003743 ,   0.002076 ,  -0.014045 ,   0.012596 , &
  -0.021891 ,   0.015296 ,   0.055417 ,  -0.041924 , &
   0.064143 ,  -0.188216 ,  -0.387874 ,   0.437460 , &
   0.011129 ,   0.261898 ,   1.000523 ,  -1.031237 , &
  -0.124892 ,  -0.091690 ,  -1.018218 ,   0.972268 , &
   0.067247 ,  -0.007923 ,   0.350890 ,  -0.318021 , &
   0.391208 ,   0.630439 ,  -0.560582 ,   0.757137 , &
  -2.104197 ,  -1.730484 ,   5.280087 ,  -2.934284 , &
   4.360268 ,   3.724475 , -11.129556 ,   5.419558 , &
  -3.092479 ,  -3.306379 ,   9.636722 ,  -4.846613 , &
   0.717254 ,   1.039409 ,  -3.006623 ,   1.583595 /
data sd18ik /  -0.000009 ,   0.000176 ,   0.001023 ,  -0.014557 , &
   0.000739 ,  -0.012489 ,  -0.018700 ,   2.364411 , &
   0.067460 ,   0.889457 ,   5.597252 ,  96.388414 /
data sc18ijk /   0.000228 ,   0.000143 ,  -0.000304 ,  -0.000019 , &
  -0.001165 ,   0.000488 ,   0.000660 ,  -0.000195 , &
   0.002010 ,  -0.002116 ,   0.000928 ,  -0.000696 , &
  -0.001380 ,   0.002424 ,  -0.002688 ,   0.001604 , &
   0.000361 ,  -0.000860 ,   0.001272 ,  -0.000738 , &
  -0.021421 ,  -0.019042 ,   0.038517 ,  -0.004212 , &
   0.126064 ,   0.008603 ,  -0.160550 ,   0.059490 , &
  -0.244791 ,   0.080699 ,   0.163735 ,  -0.039847 , &
   0.184171 ,  -0.124878 ,   0.001627 ,  -0.039442 , &
  -0.050311 ,   0.049536 ,  -0.034160 ,   0.029275 , &
   0.319499 ,   1.088720 ,  -0.833924 ,   0.727664 , &
  -2.205813 ,  -4.422048 ,   5.968191 ,  -1.570586 , &
   5.595977 ,   7.280726 ,  -9.747259 ,   1.248397 , &
  -4.844598 ,  -4.712497 ,   6.228466 ,  -0.306433 , &
   1.427065 ,   1.064969 ,  -1.432353 ,  -0.028442 /
data sd19ik /  -0.014677 ,   0.044232 ,  -0.061264 , -16.276006 , &
   0.057219 ,  -0.057169 ,   0.997953 ,  58.569556 , &
   0.010379 ,   0.489108 ,   3.610363 ,  55.844874 /
data sc19ijk /  -0.103534 ,   0.090239 ,   0.028108 ,  -0.047255 , &
   0.624832 ,  -0.145378 ,  -0.667178 ,   0.229499 , &
  -0.902387 ,  -0.153636 ,   1.568087 ,  -0.393877 , &
   0.549740 ,   0.312007 ,  -1.353283 ,   0.283643 , &
  -0.134375 ,  -0.113643 ,   0.402033 ,  -0.072743 , &
   0.403963 ,  -0.152360 ,  -0.307609 ,   0.304635 , &
  -3.033539 ,  -0.227244 ,   3.393262 ,  -1.073240 , &
   5.291493 ,   1.565443 ,  -7.044801 ,   1.531564 , &
  -3.877878 ,  -1.600414 ,   5.722641 ,  -0.982149 , &
   1.075074 ,   0.478720 ,  -1.650060 ,   0.233279 , &
   0.305476 ,  -0.054835 ,   0.626689 ,  -0.099453 , &
   0.232753 ,   2.620464 ,  -3.025641 ,   0.792392 , &
  -0.263310 ,  -5.571011 ,   5.731356 ,  -1.503327 , &
   0.363828 ,   4.403336 ,  -4.670576 ,   1.110638 , &
  -0.203618 ,  -1.227911 ,   1.370770 ,  -0.289645 /
data sd20ik /   0.000628 ,   0.002866 ,  -0.102598 ,   1.389619 , &
  -0.005548 ,   0.016562 ,   0.881422 ,  -6.076262 , &
   0.074694 ,   0.507109 ,   4.008763 , 114.474009 /
data sc20ijk /  -0.038453 ,  -0.000236 ,   0.028738 ,  -0.021125 , &
   0.322804 ,  -0.061409 ,  -0.156622 ,   0.068337 , &
  -0.713046 ,   0.220288 ,   0.221636 ,  -0.078837 , &
   0.629837 ,  -0.265870 ,  -0.124590 ,   0.039843 , &
  -0.195558 ,   0.099438 ,   0.025516 ,  -0.007749 , &
   0.161354 ,   0.182433 ,  -0.294317 ,   0.198490 , &
  -1.866313 ,  -0.647180 ,   1.529461 ,  -0.454272 , &
   4.463101 ,   0.394545 ,  -2.162568 ,   0.361320 , &
  -4.127972 ,   0.468424 ,   1.245893 ,  -0.093576 , &
   1.318725 ,  -0.336242 ,  -0.263976 ,  -0.002196 , &
   0.530371 ,  -0.362522 ,   0.597585 ,   0.008318 , &
  -0.893586 ,   3.124460 ,  -1.340263 ,   0.199105 , &
   0.636112 ,  -4.724908 ,   1.352693 ,  -0.423000 , &
   0.543628 ,   2.577170 ,  -0.631852 ,   0.308694 , &
  -0.446186 ,  -0.450310 ,   0.104667 ,  -0.078667 /
data sd21ik /  -0.003444 ,  -0.033859 ,  -0.166646 ,   0.131466 , &
   0.038903 ,   0.416651 ,   1.890248 ,  -0.290485 , &
  -0.037961 ,  -0.505642 ,   0.998227 , 111.461344 /
data sc21ijk /   0.010308 ,  -0.013976 ,   0.017421 ,  -0.008256 , &
  -0.058642 ,   0.043467 ,  -0.027857 ,   0.016359 , &
   0.107382 ,  -0.032098 ,  -0.040999 ,   0.008786 , &
  -0.096295 ,  -0.000611 ,   0.098278 ,  -0.030824 , &
   0.032914 ,   0.004881 ,  -0.044426 ,   0.014146 , &
  -0.196316 ,   0.269909 ,  -0.243800 ,   0.110595 , &
   1.037308 ,  -1.238471 ,   0.573023 ,  -0.113169 , &
  -1.836813 ,   1.819564 ,  -0.034630 ,  -0.252336 , &
   1.516141 ,  -1.138214 ,  -0.681199 ,   0.443661 , &
  -0.478951 ,   0.268764 ,   0.366853 ,  -0.178803 , &
   1.180873 ,  -0.492582 ,   0.576585 ,   0.154002 , &
  -6.404938 ,   3.811621 ,   0.425244 ,  -0.333658 , &
  12.708916 ,  -6.386805 ,  -2.956902 ,   0.629642 , &
 -10.414703 ,   4.759582 ,   3.510626 ,  -0.709576 , &
   3.088967 ,  -1.357433 ,  -1.299569 ,   0.277430 /
data sd22ik /  -0.000539 ,  -0.012084 ,  -0.026535 ,   0.074447 , &
   0.009844 ,   0.209707 ,   0.361341 ,   0.284628 , &
   0.031799 ,  -0.047882 ,   5.127685 , 110.063344 /
data sc22ijk /  -0.000900 ,  -0.010165 ,   0.013506 ,  -0.003996 , &
   0.016803 ,   0.046456 ,  -0.061592 ,   0.011666 , &
  -0.051760 ,  -0.069473 ,   0.102824 ,  -0.015863 , &
   0.055120 ,   0.038646 ,  -0.070553 ,   0.010267 , &
  -0.019988 ,  -0.006123 ,   0.016888 ,  -0.002451 , &
  -0.032722 ,   0.215866 ,  -0.224909 ,   0.066057 , &
  -0.040298 ,  -1.163997 ,   1.063931 ,  -0.093773 , &
   0.452403 ,   1.978644 ,  -1.861373 ,   0.100687 , &
  -0.640322 ,  -1.330167 ,   1.369467 ,  -0.081690 , &
   0.266398 ,   0.305944 ,  -0.357731 ,   0.025449 , &
   0.602781 ,  -0.305536 ,   0.604171 ,   0.267851 , &
  -2.655326 ,   3.257167 ,  -1.305728 ,  -0.281087 , &
   4.702749 ,  -5.995795 ,   2.825924 ,  -0.601095 , &
  -2.926887 ,   4.498019 ,  -2.715432 ,   0.963254 , &
   0.521327 ,  -1.184350 ,   0.840637 ,  -0.350586 /
data sd23ik /  -0.000003 ,   0.001942 ,   0.012393 ,   0.018037 , &
   0.000564 ,  -0.073807 ,  -0.407899 ,   1.472737 , &
   0.071021 ,   1.384588 ,   8.927256 , 103.823291 /
data sc23ijk /   0.002057 ,  -0.001696 ,   0.001152 ,  -0.000982 , &
  -0.011379 ,   0.014261 ,  -0.006759 ,   0.000808 , &
   0.021960 ,  -0.027287 ,   0.008310 ,   0.002650 , &
  -0.017501 ,   0.020890 ,  -0.003351 ,  -0.004888 , &
   0.005049 ,  -0.005687 ,   0.000312 ,   0.001902 , &
  -0.089420 ,   0.051267 ,  -0.025453 ,   0.039392 , &
   0.512775 ,  -0.517519 ,   0.197268 ,  -0.050836 , &
  -1.011824 ,   1.070007 ,  -0.342918 ,   0.035509 , &
   0.811053 ,  -0.875872 ,   0.268947 ,  -0.001705 , &
  -0.234075 ,   0.253203 ,  -0.080091 ,  -0.002069 , &
   0.874047 ,   0.493616 ,  -0.154986 ,   0.233111 , &
  -5.367845 ,   0.011844 ,   1.877571 ,   0.375269 , &
  11.972964 ,  -1.128064 ,  -2.907214 ,  -1.800692 , &
 -10.178537 ,   1.730748 ,   1.569483 ,   1.678877 , &
   3.022359 ,  -0.700540 ,  -0.278241 ,  -0.510720 /
data sd24ik /   0.000043 ,   0.001769 ,   0.004677 ,  -0.009042 , &
  -0.001581 ,  -0.081343 ,  -0.161286 ,   2.355047 , &
   0.095623 ,   1.604808 ,   7.081416 ,  97.008651 /
data sc24ijk /   0.000880 ,   0.000046 ,  -0.000474 ,  -0.000221 , &
  -0.005673 ,   0.001823 ,   0.001429 ,   0.001014 , &
   0.012392 ,  -0.006530 ,   0.000237 ,  -0.003610 , &
  -0.010507 ,   0.007680 ,  -0.003401 ,   0.004439 , &
   0.003134 ,  -0.002914 ,   0.001912 ,  -0.001678 , &
  -0.049801 ,  -0.014640 ,   0.048358 ,   0.001628 , &
   0.328577 ,  -0.055030 ,  -0.206429 ,   0.022292 , &
  -0.720998 ,   0.304374 ,   0.211992 ,   0.051899 , &
   0.608472 ,  -0.396912 ,   0.019902 ,  -0.126071 , &
  -0.180284 ,   0.156637 ,  -0.058698 ,   0.056560 , &
   0.552722 ,   1.114786 ,  -0.980684 ,   0.683988 , &
  -3.966048 ,  -4.262547 ,   6.676318 ,  -1.169709 , &
   9.983881 ,   5.882062 , -10.776258 ,   0.375776 , &
  -8.924556 ,  -2.564679 ,   6.570710 ,   0.435226 , &
   2.712438 ,   0.121386 ,  -1.345757 ,  -0.251060 /
data sd25ik /  -0.023790 ,  -0.098932 ,  -0.410100 ,  -9.897834 , &
   0.081449 ,   0.366457 ,   2.057737 ,  42.344495 , &
  -0.002443 ,   0.218478 ,   2.944585 ,  59.573557 /
data sc25ijk /  -0.132370 ,   0.226846 ,  -0.115803 ,  -0.021404 , &
   0.556840 ,  -1.002606 ,   0.507634 ,   0.030468 , &
  -0.485981 ,   1.529733 ,  -1.036537 ,   0.072047 , &
  -0.083120 ,  -0.964705 ,   0.958766 ,  -0.152557 , &
   0.146388 ,   0.217119 ,  -0.320809 ,   0.070811 , &
   0.519086 ,  -0.539169 ,   0.096535 ,   0.232963 , &
  -3.031216 ,   2.293561 ,  -0.076729 ,  -0.460064 , &
   4.521506 ,  -3.545829 ,   0.796693 ,   0.067666 , &
  -2.421660 ,   2.383236 ,  -1.300978 ,   0.392254 , &
   0.370016 ,  -0.580026 ,   0.556659 ,  -0.218818 , &
   0.218241 ,   0.192610 ,   0.348536 ,  -0.036097 , &
   0.281589 ,   0.881870 ,  -0.576484 ,   0.340126 , &
   0.085494 ,  -1.920137 ,   0.246519 ,  -0.499320 , &
  -0.443539 ,   1.516784 ,   0.194783 ,   0.200579 , &
   0.217756 ,  -0.454280 ,  -0.147290 ,   0.004914 /
data sd26ik /   0.000865 ,   0.000731 ,  -0.117809 ,  -0.830684 , &
  -0.006483 ,   0.035172 ,   0.973859 ,   6.925640 , &
   0.074800 ,   0.482395 ,   3.943178 ,  94.142671 /
data sc26ijk /  -0.037743 ,   0.010887 ,   0.014396 ,  -0.017440 , &
   0.291446 ,  -0.104030 ,  -0.072740 ,   0.041851 , &
  -0.589052 ,   0.254529 ,   0.071138 ,  -0.022920 , &
   0.473799 ,  -0.247535 ,  -0.020974 ,  -0.005924 , &
  -0.133781 ,   0.079427 ,   0.002172 ,   0.005102 , &
   0.142324 ,   0.128406 ,  -0.205641 ,   0.169996 , &
  -1.589364 ,  -0.453294 ,   0.971598 ,  -0.243671 , &
   3.567227 ,   0.287916 ,  -1.143489 ,  -0.068803 , &
  -3.083572 ,   0.277514 ,   0.541639 ,   0.248867 , &
   0.919457 ,  -0.189852 ,  -0.104711 ,  -0.096639 , &
   0.593256 ,  -0.278704 ,   0.432091 ,   0.073982 , &
  -1.540540 ,   2.781277 ,  -0.351641 ,  -0.138193 , &
   2.406334 ,  -4.486810 ,  -0.303813 ,   0.153486 , &
  -1.347390 ,   2.859545 ,   0.428507 ,  -0.099181 , &
   0.239554 ,  -0.683864 ,  -0.116477 ,   0.023394 /
data sd27ik /   0.000238 ,  -0.005235 ,  -0.034487 ,   0.155800 , &
  -0.001347 ,   0.079684 ,   0.324421 ,  -0.336813 , &
   0.064279 ,   0.399806 ,   5.207777 , 107.408733 /
data sc27ijk /  -0.004105 ,  -0.006969 ,   0.002813 ,  -0.003626 , &
   0.072282 ,   0.011111 ,   0.016663 ,  -0.011875 , &
  -0.218180 ,   0.045712 ,  -0.097831 ,   0.053173 , &
   0.231843 ,  -0.093731 ,   0.125436 ,  -0.057987 , &
  -0.080978 ,   0.042091 ,  -0.047927 ,   0.019973 , &
  -0.064734 ,   0.201711 ,  -0.075236 ,   0.054972 , &
  -0.216939 ,  -0.982024 ,   0.071226 ,   0.213461 , &
   1.335732 ,   1.223859 ,   0.549223 ,  -0.733281 , &
  -1.733724 ,  -0.381772 ,  -0.892203 ,   0.710585 , &
   0.663775 ,  -0.048378 ,   0.366918 ,  -0.228113 , &
   0.883288 ,  -0.286225 ,   0.095806 ,   0.313051 , &
  -3.523612 ,   3.053939 ,   1.819400 ,  -1.107110 , &
   5.398363 ,  -4.889508 ,  -4.371155 ,   1.593910 , &
  -2.875497 ,   3.035827 ,   3.821319 ,  -1.113037 , &
   0.417427 ,  -0.652380 ,  -1.201398 ,   0.311361 /
data sd28ik /   0.000773 ,   0.001989 ,   0.013275 ,   0.104082 , &
  -0.009480 ,  -0.019543 ,  -0.267583 ,   0.384473 , &
   0.093820 ,   0.735117 ,   7.040362 , 104.942869 /
data sc28ijk /   0.013537 ,  -0.015244 ,   0.000231 ,   0.005826 , &
  -0.079918 ,   0.102786 ,  -0.005968 ,  -0.043537 , &
   0.170901 ,  -0.226120 ,   0.022614 ,   0.087478 , &
  -0.154448 ,   0.203093 ,  -0.030013 ,  -0.070648 , &
   0.049991 ,  -0.064589 ,   0.012210 ,   0.020367 , &
  -0.273914 ,   0.290579 ,  -0.016812 ,  -0.078501 , &
   1.586895 ,  -2.028811 ,   0.199351 ,   0.707455 , &
  -3.291830 ,   4.402234 ,  -0.629804 ,  -1.374184 , &
   2.878296 ,  -3.889011 ,   0.763657 ,   1.056977 , &
  -0.906581 ,   1.218702 ,  -0.294233 ,  -0.292117 , &
   1.503263 ,  -0.521539 ,  -0.161771 ,   0.773611 , &
  -8.867396 ,   6.034369 ,   1.865377 ,  -2.931243 , &
  19.156801 , -14.173795 ,  -1.633043 ,   4.204337 , &
 -16.641143 ,  13.393620 ,  -0.517685 ,  -2.735583 , &
   5.124686 ,  -4.414368 ,   0.600570 ,   0.681188 /

data sd29ik /  -0.000056 ,  -0.000519 ,   0.003024 ,  -0.013640 , &
   0.002311 ,   0.009334 ,  -0.075516 ,   2.746669 , &
   0.058794 ,   0.697139 ,   6.144834 ,  93.093110 /
data sc29ijk /   0.001707 ,  -0.003223 ,   0.003040 ,  -0.000962 , &
  -0.009858 ,   0.021836 ,  -0.017107 ,   0.001766 , &
   0.019423 ,  -0.044154 ,   0.032202 ,  -0.001045 , &
  -0.016184 ,   0.036580 ,  -0.025937 ,  -0.000106 , &
   0.004955 ,  -0.010843 ,   0.007876 ,  -0.000114 , &
  -0.076624 ,   0.099731 ,  -0.079184 ,   0.030964 , &
   0.459708 ,  -0.760186 ,   0.488835 ,  -0.036376 , &
  -0.930068 ,   1.630651 ,  -1.031081 ,   0.052839 , &
   0.773432 ,  -1.410837 ,   0.923443 ,  -0.056040 , &
  -0.233379 ,   0.431888 ,  -0.299309 ,   0.027985 , &
   0.713284 ,   0.184861 ,   0.181036 ,   0.357786 , &
  -4.601604 ,   1.443070 ,   0.084372 ,  -0.023169 , &
  10.686992 ,  -4.654558 ,   1.420922 ,  -1.213601 , &
  -9.418864 ,   5.263105 ,  -2.523106 ,   1.340389 , &
   2.896241 ,  -1.920854 ,   1.084708 ,  -0.471712 /
data sd30ik /   0.000000 ,   0.000223 ,   0.000169 ,  -0.025541 , &
   0.000320 ,  -0.012306 ,   0.046914 ,   3.200895 , &
   0.076273 ,   0.833007 ,   4.838028 ,  88.769080 /
data sc30ijk /   0.000262 ,   0.000238 ,  -0.000582 ,   0.000106 , &
  -0.001574 ,  -0.000321 ,   0.002544 ,  -0.000704 , &
   0.003038 ,  -0.000463 ,  -0.003209 ,   0.000278 , &
  -0.002225 ,   0.001127 ,   0.001051 ,   0.000649 , &
   0.000580 ,  -0.000535 ,   0.000088 ,  -0.000377 , &
  -0.021370 ,  -0.030370 ,   0.062024 ,  -0.015763 , &
   0.142363 ,   0.089921 ,  -0.315023 ,   0.114873 , &
  -0.300493 ,  -0.078468 ,   0.500360 ,  -0.156220 , &
   0.237920 ,   0.000416 ,  -0.306099 ,   0.075559 , &
  -0.066049 ,   0.015631 ,   0.065146 ,  -0.012371 , &
   0.186295 ,   1.402425 ,  -1.194362 ,   0.865053 , &
  -1.568112 ,  -6.696124 ,   8.301229 ,  -2.060258 , &
   4.649518 ,  12.051294 , -15.043208 ,   2.438381 , &
  -4.292229 ,  -8.780702 ,  11.272555 ,  -1.593647 , &
   1.299636 ,   2.280998 ,  -3.088976 ,   0.440502 /
data sd31ik /   0.004184 ,   0.101532 ,   0.286442 ,   8.094834 , &
  -0.010373 ,  -0.241195 ,  -0.021765 , -15.570111 , &
   0.068147 ,   0.650405 ,   4.391868 ,  75.084228 /
data sc31ijk /  -0.312189 ,   0.170701 ,   0.003524 ,  -0.050658 , &
   2.213412 ,  -1.283582 ,  -0.028080 ,   0.104545 , &
  -4.646283 ,   3.092021 ,  -0.280247 ,  -0.185834 , &
   4.024870 ,  -3.034289 ,   0.442678 ,   0.221003 , &
  -1.243515 ,   1.022652 ,  -0.169653 ,  -0.091988 , &
   1.141064 ,  -0.428003 ,  -0.235812 ,   0.339475 , &
  -8.583967 ,   3.745651 ,   1.103030 ,  -0.713569 , &
  18.387333 ,  -9.902423 ,  -0.272482 ,   0.871602 , &
 -16.039766 ,  10.263207 ,  -0.933503 ,  -0.746943 , &
   4.952591 ,  -3.552668 ,   0.491749 ,   0.273735 , &
  -0.251363 ,   0.172432 ,   0.513454 ,  -0.102052 , &
   4.398299 ,  -0.781373 ,  -0.868841 ,   0.632332 , &
 -10.310727 ,   4.144748 ,  -0.053480 ,  -1.444011 , &
   9.803733 ,  -5.451248 ,   0.796606 ,   1.371798 , &
  -3.230724 ,   2.072909 ,  -0.359971 ,  -0.457567 /
data sd32ik /   0.001050 ,  -0.003164 ,  -0.136046 ,  -0.512055 , &
  -0.006309 ,   0.062654 ,   1.047454 ,   5.649844 , &
   0.072555 ,   0.461491 ,   3.943380 ,  67.071873 /
data sc32ijk /  -0.028772 ,  -0.021821 ,   0.062866 ,  -0.045555 , &
   0.270260 ,   0.055065 ,  -0.342844 ,   0.209376 , &
  -0.619242 ,   0.003233 ,   0.610478 ,  -0.377594 , &
   0.547003 ,  -0.082650 ,  -0.479159 ,   0.310391 , &
  -0.165965 ,   0.041429 ,   0.141233 ,  -0.095294 , &
   0.064989 ,   0.357435 ,  -0.579003 ,   0.404294 , &
  -1.344377 ,  -1.583956 ,   3.002660 ,  -1.586169 , &
   3.613774 ,   2.096349 ,  -5.191630 ,   2.741792 , &
  -3.494118 ,  -0.944047 ,   3.994203 ,  -2.237985 , &
   1.125892 ,   0.103573 ,  -1.156650 ,   0.686831 , &
   0.767119 ,  -0.628352 ,   0.962470 ,  -0.252104 , &
  -2.308273 ,   4.523254 ,  -3.409043 ,   1.958206 , &
   3.128228 ,  -7.497645 ,   6.221918 ,  -4.417352 , &
  -1.376094 ,   5.156706 ,  -5.371458 ,   3.996331 , &
   0.112474 ,  -1.314680 ,   1.693283 ,  -1.270533 /
data sd33ik /   0.003230 ,   0.009641 ,   0.012600 ,   0.162621 , &
  -0.027416 ,  -0.061217 ,  -0.154471 ,   0.551197 , &
   0.122105 ,   0.752100 ,   6.372755 ,  76.671650 /
data sc33ijk /   0.021671 ,  -0.028218 ,   0.033221 ,  -0.030448 , &
  -0.100463 ,   0.155490 ,  -0.144523 ,   0.119727 , &
   0.170568 ,  -0.287729 ,   0.214378 ,  -0.190462 , &
  -0.117315 ,   0.214603 ,  -0.138362 ,   0.136821 , &
   0.026696 ,  -0.056370 ,   0.032544 ,  -0.036417 , &
  -0.335037 ,   0.433015 ,  -0.379035 ,   0.304148 , &
   1.589277 ,  -2.513977 ,   1.616690 ,  -0.946691 , &
  -2.695274 ,   4.694840 ,  -2.387284 ,   1.346846 , &
   1.863738 ,  -3.566095 ,   1.563267 ,  -0.907813 , &
  -0.441610 ,   0.964142 ,  -0.376156 ,   0.228423 , &
   1.560141 ,  -0.828325 ,   0.636908 ,  -0.093234 , &
  -8.111320 ,   6.636541 ,  -1.038312 ,   0.834686 , &
  15.727458 , -13.236216 ,   1.342127 ,  -1.831669 , &
 -12.178426 ,  10.888849 ,  -1.100461 ,   1.452765 , &
   3.299900 ,  -3.192175 ,   0.310336 ,  -0.378940 /
data sd34ik /  -0.000129 ,  -0.002559 ,   0.010756 ,   0.024913 , &
   0.003440 ,   0.035605 ,  -0.234383 ,   1.913612 , &
   0.057885 ,   0.610366 ,   6.918605 ,  73.454668 /
data sc34ijk /   0.001561 ,  -0.002807 ,  -0.006136 ,   0.005272 , &
   0.000046 ,   0.021027 ,   0.034705 ,  -0.039402 , &
  -0.019433 ,  -0.033365 ,  -0.069085 ,   0.077428 , &
   0.032213 ,   0.017885 ,   0.057125 ,  -0.061673 , &
  -0.014225 ,  -0.002357 ,  -0.017046 ,   0.017695 , &
  -0.107476 ,   0.105119 ,   0.132672 ,  -0.114539 , &
   0.484419 ,  -0.840594 ,  -0.676222 ,   0.874140 , &
  -0.651505 ,   1.636750 ,   1.206059 ,  -1.640952 , &
   0.257626 ,  -1.244044 ,  -0.887834 ,   1.253367 , &
   0.005745 ,   0.329602 ,   0.240183 ,  -0.348211 , &
   0.918721 ,   0.224240 ,  -1.016486 ,   1.132980 , &
  -5.100518 ,   1.436906 ,   6.266949 ,  -4.361686 , &
  10.304905 ,  -4.044772 , -10.013248 ,   6.451051 , &
  -7.924782 ,   4.038387 ,   6.568598 ,  -4.368531 , &
   2.088941 ,  -1.329389 ,  -1.602468 ,   1.132826 /
data sd35ik /  -0.000010 ,   0.000828 ,   0.003538 ,  -0.505292 , &
   0.001002 ,  -0.026929 ,  -0.049388 ,  20.308301 , &
   0.070368 ,   0.896926 ,   5.790461 , -57.471761 /
data sc35ijk /   0.001544 ,  -0.004638 ,   0.006589 ,  -0.003256 , &
  -0.009697 ,   0.035045 ,  -0.046911 ,   0.020490 , &
   0.020355 ,  -0.082158 ,   0.109870 ,  -0.047744 , &
  -0.017368 ,   0.076613 ,  -0.103107 ,   0.044681 , &
   0.005273 ,  -0.024801 ,   0.033699 ,  -0.014620 , &
  -0.068614 ,   0.136572 ,  -0.178610 ,   0.095839 , &
   0.444470 ,  -1.129154 ,   1.361134 ,  -0.594429 , &
  -0.948269 ,   2.742478 ,  -3.343634 ,   1.455667 , &
   0.805559 ,  -2.605336 ,   3.228998 ,  -1.395777 , &
  -0.242094 ,   0.851983 ,  -1.069654 ,   0.458520 , &
   0.531766 ,   0.092785 ,   0.823860 ,  -0.117999 , &
  -3.726658 ,   2.920733 ,  -5.944994 ,   4.334881 , &
   9.293739 , -10.222775 ,  17.588162 , -11.997956 , &
  -8.445966 ,  11.778546 , -18.576559 ,  11.487495 , &
   2.617542 ,  -4.308786 ,   6.421483 ,  -3.702959 /

data sd36ik /   0.000026 ,  -0.000395 ,  -0.003071 ,  -0.040761 , &
  -0.000358 ,   0.030227 ,   0.241284 ,   4.154631 , &
   0.083207 ,   0.243254 ,   2.620396 ,  79.789146 /
data sc36ijk /   0.000249 ,   0.000095 ,  -0.005498 ,   0.005249 , &
  -0.001568 ,   0.000553 ,   0.029860 ,  -0.029349 , &
   0.003089 ,  -0.002852 ,  -0.056933 ,   0.057150 , &
  -0.002342 ,   0.003355 ,   0.046287 ,  -0.047278 , &
   0.000628 ,  -0.001196 ,  -0.013745 ,   0.014218 , &
  -0.017663 ,  -0.021834 ,   0.281494 ,  -0.250183 , &
   0.121947 ,   0.043720 ,  -1.530831 ,   1.415511 , &
  -0.259682 ,   0.042433 ,   2.882857 ,  -2.735096 , &
   0.208472 ,  -0.111086 ,  -2.311028 ,   2.246992 , &
  -0.058704 ,   0.049114 ,   0.677485 ,  -0.672233 , &
   0.030818 ,   1.367971 ,  -3.543354 ,   3.400403 , &
  -0.528067 ,  -6.739957 ,  21.185991 , -15.928541 , &
   2.428229 ,  12.055696 , -40.220389 ,  29.859785 , &
  -2.514634 ,  -8.803355 ,  32.466422 , -24.584275 , &
   0.807566 ,   2.306313 ,  -9.543679 ,   7.377144 /

data sd37ik /  -0.011881 ,   0.016125 ,  -1.416840 , -26.399965 , &
   0.046532 ,   0.065471 ,   5.792357 , 100.623320 , &
   0.018046 ,   0.394838 ,  -0.383808 , -27.192183 /
data sc37ijk /  -0.124608 ,   0.006766 ,   0.206870 ,  -0.144399 , &
   0.879092 ,   0.019133 ,  -1.930912 ,   1.280560 , &
  -1.650468 ,  -0.208411 ,   4.371944 ,  -2.894585 , &
   1.292775 ,   0.275276 ,  -3.896163 ,   2.556969 , &
  -0.361394 ,  -0.106870 ,   1.212448 ,  -0.784929 , &
   0.494251 ,   0.125801 ,  -0.928643 ,   0.660321 , &
  -3.947964 ,  -0.671570 ,   7.533935 ,  -4.719208 , &
   7.991516 ,   1.271624 , -16.101931 ,  10.207846 , &
  -6.574744 ,  -0.954799 ,  13.940289 ,  -8.898775 , &
   1.899481 ,   0.281809 ,  -4.276503 ,   2.720486 , &
   0.321310 ,  -0.269813 ,   0.985055 ,  -0.285447 , &
   0.293456 ,   2.749736 ,  -5.708099 ,   3.645661 , &
  -1.185283 ,  -4.888540 ,  12.479180 ,  -8.858495 , &
   1.544643 ,   3.744270 , -11.311850 ,   8.040241 , &
  -0.579050 ,  -1.101284 ,   3.590447 ,  -2.501760 /
data sd38ik /   0.000754 ,  -0.007467 ,  -0.141470 ,  -0.894475 , &
  -0.003475 ,   0.086331 ,   1.048120 ,   9.805418 , &
   0.067521 ,   0.447486 ,   4.003186 ,  52.421660 /
data sc38ijk /  -0.035814 ,  -0.012641 ,   0.065145 ,  -0.053116 , &
   0.321412 ,  -0.011634 ,  -0.331516 ,   0.243131 , &
  -0.763687 ,   0.179969 ,   0.554058 ,  -0.438738 , &
   0.701108 ,  -0.263076 ,  -0.408054 ,   0.357757 , &
  -0.220416 ,   0.103422 ,   0.114053 ,  -0.108405 , &
   0.103368 ,   0.296652 ,  -0.535439 ,   0.399375 , &
  -1.647388 ,  -1.123019 ,   2.555029 ,  -1.472252 , &
   4.536729 ,   0.856380 ,  -4.056849 ,   2.466137 , &
  -4.520110 ,   0.316857 ,   2.885346 ,  -1.975339 , &
   1.497825 ,  -0.327831 ,  -0.785317 ,   0.598222 , &
   0.747902 ,  -0.533885 ,   0.765549 ,  -0.128687 , &
  -2.076973 ,   3.775704 ,  -2.147872 ,   1.301465 , &
   2.177165 ,  -5.611572 ,   3.660563 ,  -3.198465 , &
  -0.197958 ,   3.354365 ,  -3.154401 ,   2.990216 , &
  -0.339651 ,  -0.723172 ,   1.001655 ,  -0.963328 /

data sd39ik /  -0.003266 ,  -0.020436 ,  -0.028247 ,   2.939974 , &
   0.037797 ,   0.228427 ,   0.248234 , -23.141264 , &
  -0.033251 ,   0.086614 ,   5.391173 , 122.857215 /
data sc39ijk /  -0.002378 ,   0.000578 ,  -0.035001 ,   0.037575 , &
   0.052265 ,  -0.055723 ,   0.324374 ,  -0.317529 , &
  -0.153329 ,   0.215190 ,  -0.809252 ,   0.739964 , &
   0.142202 ,  -0.236427 ,   0.767702 ,  -0.674425 , &
  -0.040760 ,   0.079797 ,  -0.247844 ,   0.213260 , &
  -0.110456 ,   0.161104 ,   0.289502 ,  -0.368904 , &
   0.161453 ,  -0.524789 ,  -2.860803 ,   3.279011 , &
   0.345800 ,  -0.044620 ,   7.235065 ,  -7.516743 , &
  -0.576849 ,   0.672362 ,  -6.864673 ,   6.750228 , &
   0.190893 ,  -0.310373 ,   2.212440 ,  -2.113835 , &
   1.068224 ,  -0.203206 ,  -0.931876 ,   1.493388 , &
  -5.005988 ,   2.088209 ,   9.021213 ,  -8.733021 , &
   9.175157 ,  -2.571112 , -19.694136 ,  17.873828 , &
  -7.028499 ,   1.505961 ,  17.033570 , -15.397135 , &
   2.013581 ,  -0.414998 ,  -5.199022 ,   4.738259 /

data sd40ik /  -0.000145 ,  -0.000422 ,   0.010915 ,  -1.485981 , &
   0.003537 ,  -0.000766 ,  -0.195798 ,  30.508301 , &
   0.059965 ,   0.741253 ,   6.645532 , -39.705797 /
data sc40ijk /   0.005641 ,  -0.002274 ,   0.005443 ,  -0.009459 , &
  -0.029089 ,   0.015978 ,  -0.055907 ,   0.073696 , &
   0.051062 ,  -0.015724 ,   0.143721 ,  -0.192652 , &
  -0.036979 ,  -0.001781 ,  -0.141955 ,   0.193770 , &
   0.009597 ,   0.004581 ,   0.046369 ,  -0.064635 , &
  -0.184693 ,   0.107988 ,  -0.092168 ,   0.156265 , &
   1.036116 ,  -0.841071 ,   1.062013 ,  -1.191072 , &
  -1.978044 ,   1.562949 ,  -2.875353 ,   3.260708 , &
   1.548329 ,  -1.137403 ,   2.919302 ,  -3.351934 , &
  -0.435121 ,   0.289056 ,  -0.967693 ,   1.125850 , &
   1.224942 ,   0.218180 ,  -0.097857 ,   0.035587 , &
  -7.325212 ,   1.404653 ,  -0.825575 ,   4.003366 , &
  15.760142 ,  -3.903609 ,   6.661333 , -13.216730 , &
 -13.329052 ,   3.917297 ,  -8.922603 ,  13.960825 , &
   3.956798 ,  -1.303794 ,   3.290109 ,  -4.695640 /

data sd41ik /   0.000010 ,  -0.000591 ,  -0.001744 ,  -0.065420 , &
   0.000878 ,   0.027619 ,   0.148155 ,   5.114723 , &
   0.071054 ,   0.474280 ,   4.471821 ,  72.173892 /
data sc41ijk /   0.001204 ,  -0.002974 ,   0.002226 ,  -0.000435 , &
  -0.008540 ,   0.022793 ,  -0.015697 ,   0.001584 , &
   0.019189 ,  -0.054024 ,   0.038273 ,  -0.005252 , &
  -0.017040 ,   0.050495 ,  -0.036795 ,   0.005754 , &
   0.005297 ,  -0.016266 ,   0.011968 ,  -0.001874 , &
  -0.057916 ,   0.089761 ,  -0.035463 ,  -0.004452 , &
   0.408490 ,  -0.769052 ,   0.325605 ,   0.081398 , &
  -0.912163 ,   1.905989 ,  -0.964080 ,  -0.064277 , &
   0.796799 ,  -1.823487 ,   1.023485 ,  -0.006236 , &
  -0.243641 ,   0.595438 ,  -0.349782 ,   0.008060 , &
   0.400843 ,   0.470462 ,  -0.343198 ,   0.740314 , &
  -3.103947 ,   0.002953 ,   2.517518 ,  -1.510069 , &
   8.288656 ,  -3.504053 ,  -1.906547 ,   1.293120 , &
  -7.807662 ,   5.550601 ,  -0.480454 ,  -0.694622 , &
   2.472031 ,  -2.282918 ,   0.551089 ,   0.206125 /

data sd42ik /  -0.000004 ,   0.000074 ,  -0.001467 ,  -0.042484 , &
   0.000820 ,  -0.001614 ,   0.135441 ,   4.207386 , &
   0.077721 ,   0.793176 ,   4.615562 ,  81.146086 /
data sc42ijk /   0.000106 ,   0.000017 ,   0.007081 ,  -0.007205 , &
  -0.000951 ,   0.000866 ,  -0.045418 ,   0.045348 , &
   0.002220 ,  -0.002931 ,   0.104470 ,  -0.103537 , &
  -0.001742 ,   0.003046 ,  -0.101141 ,   0.099762 , &
   0.000461 ,  -0.001021 ,   0.034432 ,  -0.033878 , &
  -0.011033 ,  -0.023265 ,  -0.354159 ,   0.384068 , &
   0.099194 ,   0.050525 ,   2.298153 ,  -2.407116 , &
  -0.244189 ,   0.016878 ,  -5.379550 ,   5.530200 , &
   0.208541 ,  -0.083401 ,   5.278546 ,  -5.348286 , &
  -0.060524 ,   0.039793 ,  -1.812677 ,   1.819216 , &
  -0.097315 ,   1.534624 ,   4.088875 ,  -4.321817 , &
   0.046425 ,  -7.617635 , -25.045238 ,  30.754332 , &
   1.716932 ,  13.840941 ,  59.923786 , -71.282369 , &
  -2.161982 , -10.271775 , -59.843362 ,  68.543295 , &
   0.744159 ,   2.731857 ,  20.823189 , -23.215159 /

contains

subroutine graygas(gasT,gasH2O, gasCO2, gasP, gasvolFrac,  kg)
    implicit none
    real(dp), dimension(1), intent(out) :: kg 
    real(dp) :: gasT,gasH2O, gasCO2, gasP, gasvolFrac
    kg(1) = grayGasKp(gasT,gasH2O, gasCO2, gasP, gasvolFrac)
end subroutine

subroutine graygasconst(gasT,kg)
    implicit none
!    include 'usrnlst.inc'
    real(dp), dimension(1), intent(out) :: kg
    real(dp) :: gasT 
    integer m
    kg(1) = 0.1d0 !const_absg 
end subroutine

subroutine graygaswsgg(gasT,gasH2O, gasCO2,gasP, kg)
    implicit none
!    include 'usrnlst.inc'
    real(dp), dimension(1), intent(out) :: kg
    real(dp), dimension(4) :: ki, ai
    integer m, i, j, k
    real(dp) :: tmp, rmrk, spl,ttr 
    real(dp) :: gasT,gasH2O, gasCO2,gasP
    real(dp) :: rad_spl
    character(len=50):: rad_wsgg 
    
            rmrk = gasH2O/gasCO2
            if(gasH2O.eq.0) rmrk = 0.0d0 
            spl        = rad_spl
!            if(UNITS=='CGS') spl = spl*1.e-2 ! cm to m  
            tmp        = 0.0d0 
            ai         = 0.0d0
            ki         = 0.0d0 
            ttr        = gasT
            if(rmrk.le.0.0d0.or. gasCO2.eq.0.0d0) then 
               tmp = 0.0d0 
            else if(rad_wsgg.eq.'SMITH82') then
                if (rmrk.eq.2) then
                  do i=1,3
                    ki(i) = ki2(i)
                    ai(i) = bei2(i,1)*1.0D-1 + bei2(i,2)*1.0D-4*ttr+ &
                    bei2(i,3)*1.0D-7*ttr**2.0 +bei2(i,4)*1.0D-11*ttr**3.0
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                  end do
                else 
                  do i=1,3
                    ki(i) = ki1(i)
                    ai(i) = bei1(i,1)*1.0D-1 + bei1(i,2)*1.0D-4*ttr+ &
                    bei1(i,3)*1.0D-7*ttr**2.0 +bei1(i,4)*1.0D-11*ttr**3.0
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                  end do
                end if
            else if(rad_wsgg.eq.'BORDBAR14') then
                do i=1,4
                   ai(i)  = 0.0d0 
                   ki(i) = 0.0d0
                   do k=1,5   ! absorption co-efficient 
                      ki(i) = ki(i) + dik(i,k) * (rmrk)**(k-1)
                      do j=1,5 ! weighting factors 
                        ai(i)= ai(i)+cijk(i,j,k)*(rmrk**(k-1))*(ttr/1200.0)**(j-1)
                      end do
                   end do
                tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                end do
            else if (rad_wsgg.eq.'KANG12') then 
                  if (rmrk.le.0.25d0)  then
                  do i=1,4
                    ai(i) = 0.0d0
                    ki(i) = k1i(i) 
                    do j=1,6
                      ai(i) = ai(i)+kd1ik(i,j)*(ttr/2000.0)**(j-1)
                    end do
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                  end do 
                  else if((rmrk.gt.0.25d0).and.(rmrk.le.0.50d0)) then 
                  do i=1,4
                    ai(i) = 0.0d0
                    ki(i) = k2i(i) 
                    do j=1,6
                      ai(i) = ai(i)+kd2ik(i,j)*(ttr/2000.0)**(j-1)
                    end do
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                  end do 
                  else if((rmrk.gt.0.50d0).and.(rmrk.le.0.75d0)) then
                  do i=1,4
                    ai(i) = 0.0d0 
                    ki(i) = k3i(i)
                    do j=1,6
                      ai(i) = ai(i)+kd3ik(i,j)*(ttr/2000.0)**(j-1)
                    end do
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                  end do 
                  else if((rmrk.gt.0.75d0).and.(rmrk.le.1.0d0)) then
                  do i=1,4
                    ai(i) = 0.0d0
                    ki(i) = k4i(i) 
                    do j=1,6
                      ai(i) = ai(i)+kd4ik(i,j)*(ttr/2000.0)**(j-1)
                    end do
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                  end do 
                  else if((rmrk.gt.1.0d0).and.(rmrk.le.2.0d0)) then
                  do i=1,4
                    ai(i) = 0.0d0
                    ki(i) = k5i(i) 
                    do j=1,6
                      ai(i) = ai(i)+kd5ik(i,j)*(ttr/2000.0)**(j-1)
                    end do 
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                  end do 
                  else if((rmrk.gt.2.0d0).and.(rmrk.le.4.0d0)) then
                  do i=1,4
                    ai(i) = 0.0d0
                    ki(i) = k6i(i) 
                    do j=1,6
                      ai(i) = ai(i)+kd6ik(i,j)*(ttr/2000.0)**(j-1)
                    end do 
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                  end do 
                  else 
                  do i=1,4
                    ai(i) = 0.0d0 
                    ki(i) = k7i(i) 
                    do j=1,6
                      ai(i) = ai(i)+kd7ik(i,j)*(ttr/2000.0)**(j-1)
                    end do
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                  end do 
                  end if 
           else if (rad_wsgg.eq.'GUO15') then ! nq = 4
               do i=1,4
               ai(i) = 0.0d0
               ki(i) = 0.0d0 
               do j=1,4
                 ki(i)=ki(i)+(gcijk(i,j,1)*rmrk*rmrk+gcijk(i,j,2)*rmrk+gcijk(i,j,3))*(ttr/1500.0)**(4-j)
                 ai(i) = ai(i) + gdik(i,j)*(ttr/1500.0)**(4-j)
               end do 
               tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
               end do 
           else if(rad_wsgg.eq.'KRISH12') then  
                  if (rmrk.le.0.20d0)  then
                    do i=1,4
                    ki(i) = kr1i(i) 
                    ai(i) = krd1ik(i,1)*ttr + krd1ik(i,2)
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                    end do 
                  else if((rmrk.gt.0.20d0).and.(rmrk.le.0.67d0)) then 
                    do i=1,4
                    ki(i) = kr2i(i)
                    ai(i) = krd2ik(i,1)*ttr + krd2ik(i,2)
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl)) 
                    end do 
                  else if((rmrk.gt.0.67d0).and.(rmrk.le.1.5d0)) then
                    do i=1,4
                    ki(i) = kr3i(i)
                    ai(i) = krd3ik(i,1)*ttr + krd3ik(i,2)
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                    end do 
                  else 
                    do i=1,4
                    ki(i) = kr4i(i)
                    ai(i) = krd4ik(i,1)*ttr + krd4ik(i,2)
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                    end do 
                  end if 
                
           else if (rad_wsgg.eq.'YIN13') then
                  if (rmrk.le.0.05d0)  then
                  do i=1,4
                   ai(i) = 0.0d0 
                   ki(i) = y1i(i) 
                    do j=1,4
                      ai(i) = ai(i)+yd1ik(i,j)*(ttr/1200.0)**(j-1)
                    end do
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                  end do 
                  else if((rmrk.gt.0.05d0).and.(rmrk.le.1.0d0)) then 
                  do i=1,4
                  ai(i) = 0.0d0 
                    ki(i) = y2i(i) 
                    do j=1,4
                      ai(i) = ai(i)+yd2ik(i,j)*(ttr/1200.0)**(j-1)
                    end do
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                  end do 
                  else if((rmrk.gt.1.0).and.(rmrk.le.2.0d0)) then 
                  do i=1,4
                  ai(i) = 0.0d0 
                    ki(i) = y3i(i)
                    do j=1,4
                      ai(i) = ai(i)+yd3ik(i,j)*(ttr/1200.0)**(j-1)
                    end do
                  tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                  end do 
                  end if 

           else if (rad_wsgg.eq.'SHAN18') then 

               if(rmrk.le.0.20d0) then
                  if( gasP.le.2) then
                    do i=1,4 
                    ai(i) = 0.0d0
                    ki(i) = sd1ik(i,1)+ sd1ik(i,2)* gasP + sd1ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc1ijk(i,j,1)+sc1ijk(i,j,2)* gasP+sc1ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.2.0).and.( gasP.le.4.0d0)) then
                    do i=1,4
                    ai(i) = 0.0d0
                    ki(i) = sd2ik(i,1)+ sd2ik(i,2)* gasP + sd2ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc2ijk(i,j,1)+sc2ijk(i,j,2)* gasP+sc2ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.4.0).and.( gasP.le.6.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd3ik(i,1)+ sd3ik(i,2)* gasP + sd3ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc3ijk(i,j,1)+sc3ijk(i,j,2)* gasP+sc3ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.6.0).and.( gasP.le.10.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd4ik(i,1)+ sd4ik(i,2)* gasP + sd4ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc4ijk(i,j,1)+sc4ijk(i,j,2)* gasP+sc4ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.10.0).and.( gasP.le.20.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd5ik(i,1)+ sd5ik(i,2)* gasP + sd5ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc5ijk(i,j,1)+sc5ijk(i,j,2)* gasP+sc5ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.20.0).and.( gasP.le.30.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd6ik(i,1)+ sd6ik(i,2)* gasP + sd6ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc6ijk(i,j,1)+sc6ijk(i,j,2)* gasP+sc6ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  end if 
               else if((rmrk.gt.0.2d0).and.(rmrk.le.0.4d0)) then
                  if( gasP.le.2) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd7ik(i,1)+ sd7ik(i,2)* gasP + sd7ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc7ijk(i,j,1)+sc7ijk(i,j,2)* gasP+sc7ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.2.0).and.( gasP.le.4.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd8ik(i,1)+ sd8ik(i,2)* gasP + sd8ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc8ijk(i,j,1)+sc8ijk(i,j,2)* gasP+sc8ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.4.0).and.( gasP.le.6.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd9ik(i,1)+ sd9ik(i,2)* gasP + sd9ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc9ijk(i,j,1)+sc9ijk(i,j,2)* gasP+sc9ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.6.0).and.( gasP.le.10.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd10ik(i,1)+ sd10ik(i,2)* gasP + sd10ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc10ijk(i,j,1)+sc10ijk(i,j,2)* gasP+sc10ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.10.0).and.( gasP.le.20.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd11ik(i,1)+ sd11ik(i,2)* gasP + sd11ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc11ijk(i,j,1)+sc11ijk(i,j,2)* gasP+sc11ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.20.0).and.( gasP.le.30.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd12ik(i,1)+ sd12ik(i,2)* gasP + sd12ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc12ijk(i,j,1)+sc12ijk(i,j,2)* gasP+sc12ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  end if
               else if((rmrk.gt.0.4d0).and.(rmrk.le.0.6d0)) then
                  if( gasP.le.2) then
                   do i=1,4
                     ai(i) = 0.0d0
                    ki(i) = sd13ik(i,1)+ sd13ik(i,2)* gasP + sd13ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc13ijk(i,j,1)+sc13ijk(i,j,2)* gasP+sc13ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.2.0).and.( gasP.le.4.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd14ik(i,1)+ sd14ik(i,2)* gasP + sd14ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc14ijk(i,j,1)+sc14ijk(i,j,2)* gasP+sc14ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.4.0).and.( gasP.le.6.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd15ik(i,1)+ sd15ik(i,2)* gasP + sd15ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc15ijk(i,j,1)+sc15ijk(i,j,2)* gasP+sc15ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.6.0).and.( gasP.le.10.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd16ik(i,1)+ sd16ik(i,2)* gasP + sd16ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc16ijk(i,j,1)+sc16ijk(i,j,2)* gasP+sc16ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.10.0).and.( gasP.le.20.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd17ik(i,1)+ sd17ik(i,2)* gasP + sd17ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc17ijk(i,j,1)+sc17ijk(i,j,2)* gasP+sc17ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.20.0).and.( gasP.le.30.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd18ik(i,1)+ sd18ik(i,2)* gasP + sd18ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc18ijk(i,j,1)+sc18ijk(i,j,2)* gasP+sc18ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  end if

               else if((rmrk.gt.0.6d0).and.(rmrk.le.0.9d0)) then
                  if( gasP.le.2) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd19ik(i,1)+ sd19ik(i,2)* gasP + sd19ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc19ijk(i,j,1)+sc19ijk(i,j,2)* gasP+sc19ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.2.0).and.( gasP.le.4.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd20ik(i,1)+ sd20ik(i,2)* gasP + sd20ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc20ijk(i,j,1)+sc20ijk(i,j,2)* gasP+sc20ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.4.0).and.( gasP.le.6.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd21ik(i,1)+ sd21ik(i,2)* gasP + sd21ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc21ijk(i,j,1)+sc21ijk(i,j,2)* gasP+sc21ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.6.0).and.( gasP.le.10.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd22ik(i,1)+ sd22ik(i,2)* gasP + sd22ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc22ijk(i,j,1)+sc22ijk(i,j,2)* gasP+sc22ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.10.0).and.( gasP.le.20.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd23ik(i,1)+ sd23ik(i,2)* gasP + sd23ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc23ijk(i,j,1)+sc23ijk(i,j,2)* gasP+sc23ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.20.0).and.( gasP.le.30.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd24ik(i,1)+ sd24ik(i,2)* gasP + sd24ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc24ijk(i,j,1)+sc24ijk(i,j,2)* gasP+sc24ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  end if
               else if((rmrk.gt.0.9d0).and.(rmrk.le.1.1d0)) then
                  if( gasP.le.2) then
                    do i=1,4                                                                                                                                                                         
                    ai(i) = 0.0d0 
                    ki(i) = sd25ik(i,1)+ sd25ik(i,2)* gasP + sd25ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc25ijk(i,j,1)+sc25ijk(i,j,2)* gasP+sc25ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.2.0).and.( gasP.le.4.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd26ik(i,1)+ sd26ik(i,2)* gasP + sd26ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc26ijk(i,j,1)+sc26ijk(i,j,2)* gasP+sc26ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.4.0).and.( gasP.le.6.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd27ik(i,1)+ sd27ik(i,2)* gasP + sd27ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc27ijk(i,j,1)+sc27ijk(i,j,2)* gasP+sc27ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.6.0).and.( gasP.le.10.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd28ik(i,1)+ sd28ik(i,2)* gasP + sd28ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc28ijk(i,j,1)+sc28ijk(i,j,2)* gasP+sc28ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.10.0).and.( gasP.le.20.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd29ik(i,1)+ sd29ik(i,2)* gasP + sd29ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc29ijk(i,j,1)+sc29ijk(i,j,2)* gasP+sc29ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.20.0).and.( gasP.le.30.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd30ik(i,1)+ sd30ik(i,2)* gasP + sd30ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc30ijk(i,j,1)+sc30ijk(i,j,2)* gasP+sc30ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  end if

               else if((rmrk.gt.1.1d0).and.(rmrk.le.2.5d0)) then
                  if( gasP.le.2) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd31ik(i,1)+ sd32ik(i,2)* gasP + sd33ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc31ijk(i,j,1)+sc31ijk(i,j,2)* gasP+sc31ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.2.0).and.( gasP.le.4.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd32ik(i,1)+ sd32ik(i,2)* gasP + sd32ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc32ijk(i,j,1)+sc32ijk(i,j,2)* gasP+sc32ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.4.0).and.( gasP.le.6.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd33ik(i,1)+ sd33ik(i,2)* gasP + sd33ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc33ijk(i,j,1)+sc33ijk(i,j,2)* gasP+sc33ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.6.0).and.( gasP.le.10.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd34ik(i,1)+ sd34ik(i,2)* gasP + sd34ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc34ijk(i,j,1)+sc34ijk(i,j,2)* gasP+sc34ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.10.0).and.( gasP.le.20.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd35ik(i,1)+ sd35ik(i,2)* gasP + sd35ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc35ijk(i,j,1)+sc35ijk(i,j,2)* gasP+sc35ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.20.0).and.( gasP.le.30.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd36ik(i,1)+ sd36ik(i,2)* gasP + sd36ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc36ijk(i,j,1)+sc36ijk(i,j,2)* gasP+sc36ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  end if

               else 
                  if( gasP.le.2) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd37ik(i,1)+ sd38ik(i,2)* gasP + sd39ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc37ijk(i,j,1)+sc37ijk(i,j,2)* gasP+sc37ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.2.0).and.( gasP.le.4.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd38ik(i,1)+ sd38ik(i,2)* gasP + sd38ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc38ijk(i,j,1)+sc38ijk(i,j,2)* gasP+sc38ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.4.0).and.( gasP.le.6.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd39ik(i,1)+ sd39ik(i,2)* gasP + sd39ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc39ijk(i,j,1)+sc39ijk(i,j,2)* gasP+sc39ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.6.0).and.( gasP.le.10.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd40ik(i,1)+ sd40ik(i,2)* gasP + sd40ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc40ijk(i,j,1)+sc40ijk(i,j,2)* gasP+sc40ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.10.0).and.( gasP.le.20.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd41ik(i,1)+ sd41ik(i,2)* gasP + sd41ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc41ijk(i,j,1)+sc41ijk(i,j,2)* gasP+sc41ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  else if(( gasP.gt.20.0).and.( gasP.le.30.0d0)) then
                    do i=1,4 
                    ai(i) = 0.0d0 
                    ki(i) = sd42ik(i,1)+ sd42ik(i,2)* gasP + sd42ik(i,3)* gasP* gasP
                    do j=1,5
                      ai(i)=ai(i)+(sc42ijk(i,j,1)+sc42ijk(i,j,2)* gasP+sc42ijk(i,j,3)* gasP* gasP)*(ttr/2000.0)**(j-1)
                    end do
                    tmp= tmp + ai(i)*(1.0d0-exp(-ki(i)*( gasH2O+ gasCO2)*spl))
                    end do
                  end if
              end if 

            else if(rad_wsgg.eq.'JOHANSSON11') then
                do i=1,4
                  ai(i) = 0.0d0
                  ki(i) = k1j(i) +k2j(i) *rmrk
                  do k=1,3
                    ai(i)=ai(i)+(c1ik(i,k)+c2ik(i,k)*rmrk+c3ik(i,k)*rmrk*rmrk)*(ttr/1200.0)**(k-1)
                  end do
                  tmp= tmp+ai(i)*(1.0d0-exp(-ki(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
               end do
            else if (rad_wsgg.eq.'TAYLOR74') then  
              if(rmrk.eq.2) then 
                 do i=1,4
                    ai(i) = bf21i(i) + bf22i(i) * ttr* 1.0d-5
                    tmp   = tmp + ai(i)*(1.0-exp(-kf2i(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                    ki(i) = kf2i(i)
                 end do
              else 
                 do i=1,4
                    ai(i) = bf11i(i) + bf12i(i) * ttr* 1.0D-5
                    tmp   = tmp + ai(i)*(1.0d0-exp(-kf1i(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                    ki(i) = kf1i(i) 
                 end do
              end if

            else if(rad_wsgg.eq.'DORIGON13') then 
              if (rmrk.eq.2) then  ! 400 K to 2500 K , 0.001 atmm to 10 atm m 
                do i=1,4 
                  ai(i) = b2i0(i) + b2i1(i)*1.0e-5*ttr  + b2i2(i)*1.0e-8*ttr*ttr +  & 
                  b2i3(i)*1.0e-11*ttr**3.0 + b2i4(i) * 1.0E-15*ttr**4.0
                  tmp = tmp + ai(i)*(1.0-exp(-kpi2(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                  ki(i) = kpi2(i)
               end do 
              else   ! rmrk.eq.1 
               do i=1,4
                  ai(i) = b1i0(i) + b1i1(i)*1.0e-5*ttr  + b1i2(i)*1.0e-8*ttr*ttr + b1i3(i)*1.0e-11*ttr**3.0 & 
                  + b1i4(i) * 1.0E-15*ttr**4.0
                  tmp = tmp + ai(i)*(1.0-exp(-kpi1(i)*( gasP * 0.986923)*( gasH2O+ gasCO2)*spl))
                  ki(i) = kpi1(i)
               end do 
              end if
            end if  ! rad_wsgg loop end
          kg(1) = tmp
return 
end subroutine

function grayGasKp(gasT,gasH2O, gasCO2, gasP, gasvolFrac) result (kp)
!    use rad_util, only : interp1ess
    implicit none
    real(dp) :: kp
    real(dp) :: gasT,gasH2O, gasCO2, gasP, gasvolFrac
    real(dp) :: kco2, kh2o
    kco2 = interp1ess(kpLen,kpT, kpCO2, gasT)
    kh2o = interp1ess(kpLen,kpT, kpH2O, gasT)
    !---M.S-rad: the tabulated absorption coefficients are in cm^-1 atm^-1 and P is in bar
    kp = (kco2*gasCO2+kh2o*gasH2O) * (gasP * 0.986923) * gasvolFrac
end function
function interp1ess(nxy ,xx,yy, xi) result (yi)
! given function xx(nxy)<=> yy(nxy), find yi(ni) corresponding to xi(ni)
! ONLY FOR EQUALLY SPACED GRID INTERPOLATION
implicit none
integer,intent(in) :: nxy
double precision,dimension(nxy),intent(in) :: xx, yy
double precision,intent(in) :: xi
double precision :: yi
 ! local variables
integer :: i!,iq
double precision :: wx,dx

dx=xx(2)-xx(1)

    if (xi<= xx(1)) then
        yi=yy(1) ! constant extrapolation
    else if (xi>= xx(nxy)) then
        yi=yy(nxy) ! constant extrapolation
    else
        i=int((xi-xx(1))/dx)+1
        wx=(xi-xx(i))/dx
        yi=wx*yy(i+1)+(1-wx)*yy(i)
    end if
end function

end module rad_gas_abs
